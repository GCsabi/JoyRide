grammar org.robotframework.text.Space

hidden(COMMENT)

import 'http://www.eclipse.org/emf/2002/Ecore' as ecore

generate space "http://www.robotframework.org/text/Space"

Model: 
	(tables+=RobotTable NL)+;

RobotTable:
	SettingsTable | TestCaseTable | KeywordTable | VariablesTable;

SettingsTable:
	header=SettingsTableHeader
	(NL settings+=Setting)+;

SettingsTableHeader: '*'+ ' ' SETTINGS ' ' '*'+;

TestCaseTable:
	header=TestCaseTableHeader
	(NL tests+=TestCase)+;

TestCaseTableHeader: '*'+ ' ' TEST ' ' CASES ' ' '*'+;

KeywordTable:
	header=KeywordTableHeader
	(NL keywords+=Keyword)+;

KeywordTableHeader:	'*'+ ' ' KEYWORDS ' ' '*'+;

VariablesTable:
	header=VariablesTableHeader
	(NL variables+=Variable)+;

VariablesTableHeader: '*'+ ' ' VARIABLES ' ' '*'+;

Setting:
	(ValuesSetting | StepSetting);

TestCase:
	name=MacroName
	(NL SEPARATOR settings+=TestCaseSetting)*
	(NL SEPARATOR steps+=RobotStep)+;

Keyword:
	name=MacroName
	(NL SEPARATOR settings+=KeywordSetting)*
	(NL SEPARATOR steps+=RobotStep)+;

Variable:
	ScalarVariable | ListVariable
;

ScalarVariable:
	name=ScalarName SEPARATOR  value=RobotText
;

ListVariable:
	name=ListName SEPARATOR value=Values
;

TestCaseSetting:
	SetupSetting | TeardownSetting | SomeTestSetting;

SomeTestSetting:
	name=(DocumentationMacroSettingName |
	TimeoutSettingName |
	TagsTestSettingName |
	TemplateTestSettingName) 
	SEPARATOR value=Values;

TagsTestSettingName: '['TAGS']';
TemplateTestSettingName: '['TEMPLATE']';

KeywordSetting:
    setting=(ArgumentsSetting | TeardownSetting | SomeKeywordSetting);

ArgumentsSetting:
	name=ArgumentsSettingName
	(SEPARATOR args+=ScalarName)*
	(SEPARATOR default_args+=ScalarName '=' defaults+=RobotText)*
	(SEPARATOR ListName)?;

ArgumentsSettingName: '[' ARGUMENTS ']';

TeardownSetting:
    name=TeardownSettingName SEPARATOR step=ExecutingStep
;

TeardownSettingName: '['TEARDOWN']';

SetupSetting:
    name=SetupSettingName SEPARATOR step=ExecutingStep;

SetupSettingName: '['SETUP']';

SomeKeywordSetting:
	name=(DocumentationMacroSettingName |
	TimeoutSettingName |
	ReturnKeywordSettingName) 
	SEPARATOR 
	value=Values;

TimeoutSettingName: '[' TIMEOUT ']';
DocumentationMacroSettingName: '['DOCUMENTATION']';
ReturnKeywordSettingName: '[' RETURN ']';

ValuesSetting:
	name=(ForceTags |
	DefaultTags |
	LIBRARY |
	RESOURCE |
	TestTemplate |
	TestTimeout |
	DOCUMENTATION) 
	SEPARATOR 
	value=Values;

ForceTags: FORCE' 'TAGS;
DefaultTags: DEFAULT' 'TAGS;
TestTemplate: TEST ' ' TEMPLATE;
TestTimeout: TEST ' ' TIMEOUT;

StepSetting:
	name=( SuiteSetup |
	SuiteTeardown |
	TestSetup |
	TestTeardown) 
	SEPARATOR 
	value=ExecutingStep;

SuiteSetup:    SUITE' 'SETUP;
SuiteTeardown: SUITE' 'TEARDOWN;
TestSetup:     TEST' 'SETUP;
TestTeardown:  TEST' 'TEARDOWN;

RobotStep:
    ExecutingStep | AssigningStep	
;

ExecutingStep:
	keyword=[Keyword|MacroName] (SEPARATOR values+=CellValue)*;

AssigningStep:
	(vars+=[Variable|ScalarName] SEPARATOR)* 
	(vars+=[Variable|ScalarName] | vars+=[Variable|ListName]) '='? 
	SEPARATOR keyword=[Keyword|MacroName] 
	(SEPARATOR values+=CellValue)*
;

CellValue: {CellValue}
	f=RobotText | scalarlink=[ScalarVariable|ScalarName] | listlink=[ListVariable|ListName]
;

Values:
	val=RobotText (SEPARATOR others+=RobotText)*;

ScalarName:
	'$' '{' RobotText '}'
;

ListName:
	'@' '{' RobotText '}'
;

RobotText: ('*' | TextOrReservedWord) ((' ' | '*') TextOrReservedWord)*;

MacroName: TextOrReservedWord ((' ' | '*') TextOrReservedWord)*;

TextOrReservedWord: TEXT | TEST | CASES | SETTINGS | 
	                KEYWORDS | VARIABLES | SUITE | SETUP |
	                TEARDOWN | TAGS | TIMEOUT | TEMPLATE |
	                DEFAULT | FORCE | DOCUMENTATION | RESOURCE |
	                LIBRARY | RETURN | ARGUMENTS
;

terminal NL: ('\r'|'\n')+;

terminal TEST: 'Test';
terminal CASES: 'Cases';
terminal SETTINGS: 'Settings';
terminal KEYWORDS: 'Keywords';
terminal VARIABLES: 'Variables';
terminal SUITE: 'Suite';
terminal SETUP: 'Setup';
terminal TEARDOWN: 'Teardown';
terminal TAGS: 'Tags';
terminal TIMEOUT: 'Timeout';
terminal TEMPLATE: 'Template';
terminal DEFAULT: 'Default';
terminal FORCE: 'Force';
terminal DOCUMENTATION: 'Documentation';
terminal RESOURCE: 'Resource';
terminal LIBRARY: 'Library';
terminal RETURN: 'Return';
terminal ARGUMENTS: 'Arguments';

terminal TEXT: !('='|' '|'\r'|'\n'|'*'|'{'|'}'|'$'|'@'|'['|']')+;

terminal SEPARATOR: ' '' '+;

terminal COMMENT: ' '* '#' !('\r'|'\n')*;