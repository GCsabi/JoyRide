/*
* generated by Xtext
*/
grammar InternalSpace;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.robotframework.text.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.robotframework.text.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.robotframework.text.services.SpaceGrammarAccess;

}

@parser::members {

 	private SpaceGrammarAccess grammarAccess;
 	
    public InternalSpaceParser(TokenStream input, SpaceGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected SpaceGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getTablesRobotTableParserRuleCall_0()); 
	    }
		lv_tables_0_0=ruleRobotTable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"tables",
        		lv_tables_0_0, 
        		"RobotTable");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleRobotTable
entryRuleRobotTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRobotTableRule()); }
	 iv_ruleRobotTable=ruleRobotTable 
	 { $current=$iv_ruleRobotTable.current; } 
	 EOF 
;

// Rule RobotTable
ruleRobotTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRobotTableAccess().getSettingsTableParserRuleCall_0()); 
    }
    this_SettingsTable_0=ruleSettingsTable
    { 
        $current = $this_SettingsTable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRobotTableAccess().getTestCaseTableParserRuleCall_1()); 
    }
    this_TestCaseTable_1=ruleTestCaseTable
    { 
        $current = $this_TestCaseTable_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRobotTableAccess().getKeywordTableParserRuleCall_2()); 
    }
    this_KeywordTable_2=ruleKeywordTable
    { 
        $current = $this_KeywordTable_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRobotTableAccess().getVariablesTableParserRuleCall_3()); 
    }
    this_VariablesTable_3=ruleVariablesTable
    { 
        $current = $this_VariablesTable_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSettingsTable
entryRuleSettingsTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSettingsTableRule()); }
	 iv_ruleSettingsTable=ruleSettingsTable 
	 { $current=$iv_ruleSettingsTable.current; } 
	 EOF 
;

// Rule SettingsTable
ruleSettingsTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSettingsTableAccess().getSettingsHeaderParserRuleCall_0()); 
    }
ruleSettingsHeader
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSettingsTableAccess().getSettingsSettingParserRuleCall_1_0()); 
	    }
		lv_settings_1_0=ruleSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSettingsTableRule());
	        }
       		add(
       			$current, 
       			"settings",
        		lv_settings_1_0, 
        		"Setting");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleSettingsHeader
entryRuleSettingsHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSettingsHeaderRule()); } 
	 iv_ruleSettingsHeader=ruleSettingsHeader 
	 { $current=$iv_ruleSettingsHeader.current.getText(); }  
	 EOF 
;

// Rule SettingsHeader
ruleSettingsHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STARS_0=RULE_STARS    {
		$current.merge(this_STARS_0);
    }

    { 
    newLeafNode(this_STARS_0, grammarAccess.getSettingsHeaderAccess().getSTARSTerminalRuleCall_0()); 
    }

	kw=' Settings ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSettingsHeaderAccess().getSettingsKeyword_1()); 
    }
    this_STARS_2=RULE_STARS    {
		$current.merge(this_STARS_2);
    }

    { 
    newLeafNode(this_STARS_2, grammarAccess.getSettingsHeaderAccess().getSTARSTerminalRuleCall_2()); 
    }
    this_NL_3=RULE_NL    {
		$current.merge(this_NL_3);
    }

    { 
    newLeafNode(this_NL_3, grammarAccess.getSettingsHeaderAccess().getNLTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleTestCaseTable
entryRuleTestCaseTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestCaseTableRule()); }
	 iv_ruleTestCaseTable=ruleTestCaseTable 
	 { $current=$iv_ruleTestCaseTable.current; } 
	 EOF 
;

// Rule TestCaseTable
ruleTestCaseTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTestCaseTableAccess().getTestCaseHeaderParserRuleCall_0()); 
    }
ruleTestCaseHeader
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTestCaseTableAccess().getTestsTestCaseParserRuleCall_1_0()); 
	    }
		lv_tests_1_0=ruleTestCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTestCaseTableRule());
	        }
       		add(
       			$current, 
       			"tests",
        		lv_tests_1_0, 
        		"TestCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleTestCaseHeader
entryRuleTestCaseHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestCaseHeaderRule()); } 
	 iv_ruleTestCaseHeader=ruleTestCaseHeader 
	 { $current=$iv_ruleTestCaseHeader.current.getText(); }  
	 EOF 
;

// Rule TestCaseHeader
ruleTestCaseHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STARS_0=RULE_STARS    {
		$current.merge(this_STARS_0);
    }

    { 
    newLeafNode(this_STARS_0, grammarAccess.getTestCaseHeaderAccess().getSTARSTerminalRuleCall_0()); 
    }

	kw=' Test Cases ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTestCaseHeaderAccess().getTestCasesKeyword_1()); 
    }
    this_STARS_2=RULE_STARS    {
		$current.merge(this_STARS_2);
    }

    { 
    newLeafNode(this_STARS_2, grammarAccess.getTestCaseHeaderAccess().getSTARSTerminalRuleCall_2()); 
    }
    this_NL_3=RULE_NL    {
		$current.merge(this_NL_3);
    }

    { 
    newLeafNode(this_NL_3, grammarAccess.getTestCaseHeaderAccess().getNLTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleKeywordTable
entryRuleKeywordTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeywordTableRule()); }
	 iv_ruleKeywordTable=ruleKeywordTable 
	 { $current=$iv_ruleKeywordTable.current; } 
	 EOF 
;

// Rule KeywordTable
ruleKeywordTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getKeywordTableAccess().getKeywordTableHeaderParserRuleCall_0()); 
    }
ruleKeywordTableHeader
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKeywordTableAccess().getKeywordsKeywordParserRuleCall_1_0()); 
	    }
		lv_keywords_1_0=ruleKeyword		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordTableRule());
	        }
       		add(
       			$current, 
       			"keywords",
        		lv_keywords_1_0, 
        		"Keyword");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleKeywordTableHeader
entryRuleKeywordTableHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeywordTableHeaderRule()); } 
	 iv_ruleKeywordTableHeader=ruleKeywordTableHeader 
	 { $current=$iv_ruleKeywordTableHeader.current.getText(); }  
	 EOF 
;

// Rule KeywordTableHeader
ruleKeywordTableHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STARS_0=RULE_STARS    {
		$current.merge(this_STARS_0);
    }

    { 
    newLeafNode(this_STARS_0, grammarAccess.getKeywordTableHeaderAccess().getSTARSTerminalRuleCall_0()); 
    }

	kw=' Keywords ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getKeywordTableHeaderAccess().getKeywordsKeyword_1()); 
    }
    this_STARS_2=RULE_STARS    {
		$current.merge(this_STARS_2);
    }

    { 
    newLeafNode(this_STARS_2, grammarAccess.getKeywordTableHeaderAccess().getSTARSTerminalRuleCall_2()); 
    }
    this_NL_3=RULE_NL    {
		$current.merge(this_NL_3);
    }

    { 
    newLeafNode(this_NL_3, grammarAccess.getKeywordTableHeaderAccess().getNLTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleVariablesTable
entryRuleVariablesTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariablesTableRule()); }
	 iv_ruleVariablesTable=ruleVariablesTable 
	 { $current=$iv_ruleVariablesTable.current; } 
	 EOF 
;

// Rule VariablesTable
ruleVariablesTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVariablesTableAccess().getVariablesTableHeaderParserRuleCall_0()); 
    }
ruleVariablesTableHeader
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesTableAccess().getVariablesVariableParserRuleCall_1_0()); 
	    }
		lv_variables_1_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesTableRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_1_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleVariablesTableHeader
entryRuleVariablesTableHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariablesTableHeaderRule()); } 
	 iv_ruleVariablesTableHeader=ruleVariablesTableHeader 
	 { $current=$iv_ruleVariablesTableHeader.current.getText(); }  
	 EOF 
;

// Rule VariablesTableHeader
ruleVariablesTableHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STARS_0=RULE_STARS    {
		$current.merge(this_STARS_0);
    }

    { 
    newLeafNode(this_STARS_0, grammarAccess.getVariablesTableHeaderAccess().getSTARSTerminalRuleCall_0()); 
    }

	kw=' Variables ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariablesTableHeaderAccess().getVariablesKeyword_1()); 
    }
    this_STARS_2=RULE_STARS    {
		$current.merge(this_STARS_2);
    }

    { 
    newLeafNode(this_STARS_2, grammarAccess.getVariablesTableHeaderAccess().getSTARSTerminalRuleCall_2()); 
    }
    this_NL_3=RULE_NL    {
		$current.merge(this_NL_3);
    }

    { 
    newLeafNode(this_NL_3, grammarAccess.getVariablesTableHeaderAccess().getNLTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleSetting
entryRuleSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSettingRule()); }
	 iv_ruleSetting=ruleSetting 
	 { $current=$iv_ruleSetting.current; } 
	 EOF 
;

// Rule Setting
ruleSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSettingAccess().getOneValueSettingParserRuleCall_0()); 
    }
    this_OneValueSetting_0=ruleOneValueSetting
    { 
        $current = $this_OneValueSetting_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSettingAccess().getValuesSettingParserRuleCall_1()); 
    }
    this_ValuesSetting_1=ruleValuesSetting
    { 
        $current = $this_ValuesSetting_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSettingAccess().getStepSettingParserRuleCall_2()); 
    }
    this_StepSetting_2=ruleStepSetting
    { 
        $current = $this_StepSetting_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTestCase
entryRuleTestCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestCaseRule()); }
	 iv_ruleTestCase=ruleTestCase 
	 { $current=$iv_ruleTestCase.current; } 
	 EOF 
;

// Rule TestCase
ruleTestCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTestCaseAccess().getNameMacroNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleMacroName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTestCaseRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"MacroName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getTestCaseAccess().getNLTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTestCaseAccess().getSettingsTestCaseSettingParserRuleCall_2_0()); 
	    }
		lv_settings_2_0=ruleTestCaseSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTestCaseRule());
	        }
       		add(
       			$current, 
       			"settings",
        		lv_settings_2_0, 
        		"TestCaseSetting");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTestCaseAccess().getStepsIndentedStepParserRuleCall_3_0()); 
	    }
		lv_steps_3_0=ruleIndentedStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTestCaseRule());
	        }
       		add(
       			$current, 
       			"steps",
        		lv_steps_3_0, 
        		"IndentedStep");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleKeyword
entryRuleKeyword returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeywordRule()); }
	 iv_ruleKeyword=ruleKeyword 
	 { $current=$iv_ruleKeyword.current; } 
	 EOF 
;

// Rule Keyword
ruleKeyword returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getKeywordAccess().getNameMacroNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleMacroName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"MacroName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getKeywordAccess().getNLTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKeywordAccess().getSettingsKeywordSettingParserRuleCall_2_0()); 
	    }
		lv_settings_2_0=ruleKeywordSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordRule());
	        }
       		add(
       			$current, 
       			"settings",
        		lv_settings_2_0, 
        		"KeywordSetting");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getKeywordAccess().getStepsIndentedStepParserRuleCall_3_0()); 
	    }
		lv_steps_3_0=ruleIndentedStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordRule());
	        }
       		add(
       			$current, 
       			"steps",
        		lv_steps_3_0, 
        		"IndentedStep");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_ruleVariable=ruleVariable 
	 { $current=$iv_ruleVariable.current; } 
	 EOF 
;

// Rule Variable
ruleVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVariableAccess().getScalarVariableParserRuleCall_0()); 
    }
    this_ScalarVariable_0=ruleScalarVariable
    { 
        $current = $this_ScalarVariable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVariableAccess().getListVariableParserRuleCall_1()); 
    }
    this_ListVariable_1=ruleListVariable
    { 
        $current = $this_ListVariable_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleScalarVariable
entryRuleScalarVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScalarVariableRule()); }
	 iv_ruleScalarVariable=ruleScalarVariable 
	 { $current=$iv_ruleScalarVariable.current; } 
	 EOF 
;

// Rule ScalarVariable
ruleScalarVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getScalarVariableAccess().getNameScalarNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleScalarName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScalarVariableRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ScalarName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getScalarVariableAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScalarVariableAccess().getValueRobotTextParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleRobotText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScalarVariableRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"RobotText");
	        afterParserOrEnumRuleCall();
	    }

)
)this_NL_3=RULE_NL
    { 
    newLeafNode(this_NL_3, grammarAccess.getScalarVariableAccess().getNLTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleListVariable
entryRuleListVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListVariableRule()); }
	 iv_ruleListVariable=ruleListVariable 
	 { $current=$iv_ruleListVariable.current; } 
	 EOF 
;

// Rule ListVariable
ruleListVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getListVariableAccess().getNameListNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleListName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListVariableRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ListName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getListVariableAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListVariableAccess().getValueValuesParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListVariableRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Values");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTestCaseSetting
entryRuleTestCaseSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestCaseSettingRule()); }
	 iv_ruleTestCaseSetting=ruleTestCaseSetting 
	 { $current=$iv_ruleTestCaseSetting.current; } 
	 EOF 
;

// Rule TestCaseSetting
ruleTestCaseSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTestCaseSettingAccess().getSetupSettingParserRuleCall_0()); 
    }
    this_SetupSetting_0=ruleSetupSetting
    { 
        $current = $this_SetupSetting_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTestCaseSettingAccess().getTeardownSettingParserRuleCall_1()); 
    }
    this_TeardownSetting_1=ruleTeardownSetting
    { 
        $current = $this_TeardownSetting_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTestCaseSettingAccess().getSomeTestSettingParserRuleCall_2()); 
    }
    this_SomeTestSetting_2=ruleSomeTestSetting
    { 
        $current = $this_SomeTestSetting_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSomeTestSetting
entryRuleSomeTestSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSomeTestSettingRule()); }
	 iv_ruleSomeTestSetting=ruleSomeTestSetting 
	 { $current=$iv_ruleSomeTestSetting.current; } 
	 EOF 
;

// Rule SomeTestSetting
ruleSomeTestSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_SEPARATOR_0=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_0, grammarAccess.getSomeTestSettingAccess().getSEPARATORTerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeTestSettingAccess().getNameTestCaseSettingNameEnumRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleTestCaseSettingName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeTestSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"TestCaseSettingName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEPARATOR_2=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_2, grammarAccess.getSomeTestSettingAccess().getSEPARATORTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeTestSettingAccess().getValueValuesParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeTestSettingRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Values");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleKeywordSetting
entryRuleKeywordSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeywordSettingRule()); }
	 iv_ruleKeywordSetting=ruleKeywordSetting 
	 { $current=$iv_ruleKeywordSetting.current; } 
	 EOF 
;

// Rule KeywordSetting
ruleKeywordSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getKeywordSettingAccess().getArgumentsSettingParserRuleCall_0()); 
    }
    this_ArgumentsSetting_0=ruleArgumentsSetting
    { 
        $current = $this_ArgumentsSetting_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getKeywordSettingAccess().getTeardownSettingParserRuleCall_1()); 
    }
    this_TeardownSetting_1=ruleTeardownSetting
    { 
        $current = $this_TeardownSetting_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getKeywordSettingAccess().getSomeKeywordSettingParserRuleCall_2()); 
    }
    this_SomeKeywordSetting_2=ruleSomeKeywordSetting
    { 
        $current = $this_SomeKeywordSetting_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleArgumentsSetting
entryRuleArgumentsSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentsSettingRule()); }
	 iv_ruleArgumentsSetting=ruleArgumentsSetting 
	 { $current=$iv_ruleArgumentsSetting.current; } 
	 EOF 
;

// Rule ArgumentsSetting
ruleArgumentsSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_SEPARATOR_0=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_0, grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_0()); 
    }
(
(
		lv_name_1_0=	'[Arguments]' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getArgumentsSettingAccess().getNameArgumentsKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentsSettingRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "[Arguments]");
	    }

)
)(this_SEPARATOR_2=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_2, grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentsSettingAccess().getArgsScalarNameParserRuleCall_2_1_0()); 
	    }
		lv_args_3_0=ruleScalarName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentsSettingRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"ScalarName");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_SEPARATOR_4=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_4, grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentsSettingAccess().getDefault_argsScalarNameParserRuleCall_3_1_0()); 
	    }
		lv_default_args_5_0=ruleScalarName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentsSettingRule());
	        }
       		add(
       			$current, 
       			"default_args",
        		lv_default_args_5_0, 
        		"ScalarName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_EQ_6=RULE_EQ
    { 
    newLeafNode(this_EQ_6, grammarAccess.getArgumentsSettingAccess().getEQTerminalRuleCall_3_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentsSettingAccess().getDefaultsRobotTextParserRuleCall_3_3_0()); 
	    }
		lv_defaults_7_0=ruleRobotText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentsSettingRule());
	        }
       		add(
       			$current, 
       			"defaults",
        		lv_defaults_7_0, 
        		"RobotText");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_SEPARATOR_8=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_8, grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_4_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getArgumentsSettingAccess().getListNameParserRuleCall_4_1()); 
    }
ruleListName
    { 
        afterParserOrEnumRuleCall();
    }
)?this_NL_10=RULE_NL
    { 
    newLeafNode(this_NL_10, grammarAccess.getArgumentsSettingAccess().getNLTerminalRuleCall_5()); 
    }
)
;





// Entry rule entryRuleTeardownSetting
entryRuleTeardownSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTeardownSettingRule()); }
	 iv_ruleTeardownSetting=ruleTeardownSetting 
	 { $current=$iv_ruleTeardownSetting.current; } 
	 EOF 
;

// Rule TeardownSetting
ruleTeardownSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_SEPARATOR_0=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_0, grammarAccess.getTeardownSettingAccess().getSEPARATORTerminalRuleCall_0()); 
    }
(
(
		lv_name_1_0=	'[Teardown]' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getTeardownSettingAccess().getNameTeardownKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTeardownSettingRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "[Teardown]");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTeardownSettingAccess().getStepIndentedStepParserRuleCall_2_0()); 
	    }
		lv_step_2_0=ruleIndentedStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTeardownSettingRule());
	        }
       		set(
       			$current, 
       			"step",
        		lv_step_2_0, 
        		"IndentedStep");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSetupSetting
entryRuleSetupSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetupSettingRule()); }
	 iv_ruleSetupSetting=ruleSetupSetting 
	 { $current=$iv_ruleSetupSetting.current; } 
	 EOF 
;

// Rule SetupSetting
ruleSetupSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_SEPARATOR_0=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_0, grammarAccess.getSetupSettingAccess().getSEPARATORTerminalRuleCall_0()); 
    }
(
(
		lv_name_1_0=	'[Setup]' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getSetupSettingAccess().getNameSetupKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetupSettingRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "[Setup]");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSetupSettingAccess().getStepIndentedStepParserRuleCall_2_0()); 
	    }
		lv_step_2_0=ruleIndentedStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetupSettingRule());
	        }
       		set(
       			$current, 
       			"step",
        		lv_step_2_0, 
        		"IndentedStep");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSomeKeywordSetting
entryRuleSomeKeywordSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSomeKeywordSettingRule()); }
	 iv_ruleSomeKeywordSetting=ruleSomeKeywordSetting 
	 { $current=$iv_ruleSomeKeywordSetting.current; } 
	 EOF 
;

// Rule SomeKeywordSetting
ruleSomeKeywordSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_SEPARATOR_0=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_0, grammarAccess.getSomeKeywordSettingAccess().getSEPARATORTerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeKeywordSettingAccess().getNameKeywordSettingNameEnumRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleKeywordSettingName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeKeywordSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"KeywordSettingName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEPARATOR_2=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_2, grammarAccess.getSomeKeywordSettingAccess().getSEPARATORTerminalRuleCall_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeKeywordSettingAccess().getValueValuesParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeKeywordSettingRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"Values");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIndentedStep
entryRuleIndentedStep returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndentedStepRule()); }
	 iv_ruleIndentedStep=ruleIndentedStep 
	 { $current=$iv_ruleIndentedStep.current; } 
	 EOF 
;

// Rule IndentedStep
ruleIndentedStep returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_SEPARATOR_0=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_0, grammarAccess.getIndentedStepAccess().getSEPARATORTerminalRuleCall_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getIndentedStepAccess().getRobotStepParserRuleCall_1()); 
    }
    this_RobotStep_1=ruleRobotStep
    { 
        $current = $this_RobotStep_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOneValueSetting
entryRuleOneValueSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOneValueSettingRule()); }
	 iv_ruleOneValueSetting=ruleOneValueSetting 
	 { $current=$iv_ruleOneValueSetting.current; } 
	 EOF 
;

// Rule OneValueSetting
ruleOneValueSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOneValueSettingAccess().getNameRobotOneValueSettingEnumRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleRobotOneValueSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOneValueSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"RobotOneValueSetting");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getOneValueSettingAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOneValueSettingAccess().getValueRobotTextParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleRobotText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOneValueSettingRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"RobotText");
	        afterParserOrEnumRuleCall();
	    }

)
)this_NL_3=RULE_NL
    { 
    newLeafNode(this_NL_3, grammarAccess.getOneValueSettingAccess().getNLTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleValuesSetting
entryRuleValuesSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValuesSettingRule()); }
	 iv_ruleValuesSetting=ruleValuesSetting 
	 { $current=$iv_ruleValuesSetting.current; } 
	 EOF 
;

// Rule ValuesSetting
ruleValuesSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValuesSettingAccess().getNameRobotValuesSettingEnumRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleRobotValuesSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValuesSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"RobotValuesSetting");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getValuesSettingAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValuesSettingAccess().getValueValuesParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValuesSettingRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Values");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStepSetting
entryRuleStepSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStepSettingRule()); }
	 iv_ruleStepSetting=ruleStepSetting 
	 { $current=$iv_ruleStepSetting.current; } 
	 EOF 
;

// Rule StepSetting
ruleStepSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getStepSettingAccess().getNameRobotStepSettingEnumRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleRobotStepSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStepSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"RobotStepSetting");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getStepSettingAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStepSettingAccess().getValueRobotStepParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleRobotStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStepSettingRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"RobotStep");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRobotStep
entryRuleRobotStep returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRobotStepRule()); }
	 iv_ruleRobotStep=ruleRobotStep 
	 { $current=$iv_ruleRobotStep.current; } 
	 EOF 
;

// Rule RobotStep
ruleRobotStep returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRobotStepRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRobotStepAccess().getKeywordKeywordCrossReference_0_0()); 
	    }
		ruleMacroName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getRobotStepAccess().getSEPARATORTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRobotStepAccess().getValuesCellValueParserRuleCall_1_1_0()); 
	    }
		lv_values_2_0=ruleCellValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRobotStepRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"CellValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_NL_3=RULE_NL
    { 
    newLeafNode(this_NL_3, grammarAccess.getRobotStepAccess().getNLTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleCellValue
entryRuleCellValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCellValueRule()); }
	 iv_ruleCellValue=ruleCellValue 
	 { $current=$iv_ruleCellValue.current; } 
	 EOF 
;

// Rule CellValue
ruleCellValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCellValueAccess().getCellValueAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCellValueAccess().getFRobotTextParserRuleCall_0_1_0()); 
	    }
		lv_f_1_0=ruleRobotText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCellValueRule());
	        }
       		set(
       			$current, 
       			"f",
        		lv_f_1_0, 
        		"RobotText");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCellValueAccess().getLinkScalarVariableCrossReference_1_0()); 
	    }
		ruleScalarName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleValues
entryRuleValues returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValuesRule()); }
	 iv_ruleValues=ruleValues 
	 { $current=$iv_ruleValues.current; } 
	 EOF 
;

// Rule Values
ruleValues returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValuesAccess().getValRobotTextParserRuleCall_0_0()); 
	    }
		lv_val_0_0=ruleRobotText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValuesRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_0_0, 
        		"RobotText");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getValuesAccess().getSEPARATORTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValuesAccess().getOthersRobotTextParserRuleCall_1_1_0()); 
	    }
		lv_others_2_0=ruleRobotText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValuesRule());
	        }
       		add(
       			$current, 
       			"others",
        		lv_others_2_0, 
        		"RobotText");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_NL_3=RULE_NL
    { 
    newLeafNode(this_NL_3, grammarAccess.getValuesAccess().getNLTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleScalarName
entryRuleScalarName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getScalarNameRule()); } 
	 iv_ruleScalarName=ruleScalarName 
	 { $current=$iv_ruleScalarName.current.getText(); }  
	 EOF 
;

// Rule ScalarName
ruleScalarName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_DOLLAR_0=RULE_DOLLAR    {
		$current.merge(this_DOLLAR_0);
    }

    { 
    newLeafNode(this_DOLLAR_0, grammarAccess.getScalarNameAccess().getDOLLARTerminalRuleCall_0()); 
    }
    this_LBRACKET_1=RULE_LBRACKET    {
		$current.merge(this_LBRACKET_1);
    }

    { 
    newLeafNode(this_LBRACKET_1, grammarAccess.getScalarNameAccess().getLBRACKETTerminalRuleCall_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getScalarNameAccess().getRobotTextParserRuleCall_2()); 
    }
    this_RobotText_2=ruleRobotText    {
		$current.merge(this_RobotText_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
    this_RBRACKET_3=RULE_RBRACKET    {
		$current.merge(this_RBRACKET_3);
    }

    { 
    newLeafNode(this_RBRACKET_3, grammarAccess.getScalarNameAccess().getRBRACKETTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleListName
entryRuleListName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getListNameRule()); } 
	 iv_ruleListName=ruleListName 
	 { $current=$iv_ruleListName.current.getText(); }  
	 EOF 
;

// Rule ListName
ruleListName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ATSIGN_0=RULE_ATSIGN    {
		$current.merge(this_ATSIGN_0);
    }

    { 
    newLeafNode(this_ATSIGN_0, grammarAccess.getListNameAccess().getATSIGNTerminalRuleCall_0()); 
    }
    this_LBRACKET_1=RULE_LBRACKET    {
		$current.merge(this_LBRACKET_1);
    }

    { 
    newLeafNode(this_LBRACKET_1, grammarAccess.getListNameAccess().getLBRACKETTerminalRuleCall_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getListNameAccess().getRobotTextParserRuleCall_2()); 
    }
    this_RobotText_2=ruleRobotText    {
		$current.merge(this_RobotText_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
    this_RBRACKET_3=RULE_RBRACKET    {
		$current.merge(this_RBRACKET_3);
    }

    { 
    newLeafNode(this_RBRACKET_3, grammarAccess.getListNameAccess().getRBRACKETTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleRobotText
entryRuleRobotText returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRobotTextRule()); } 
	 iv_ruleRobotText=ruleRobotText 
	 { $current=$iv_ruleRobotText.current.getText(); }  
	 EOF 
;

// Rule RobotText
ruleRobotText returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_STARS_0=RULE_STARS    {
		$current.merge(this_STARS_0);
    }

    { 
    newLeafNode(this_STARS_0, grammarAccess.getRobotTextAccess().getSTARSTerminalRuleCall_0_0()); 
    }

    |    this_TEXT_1=RULE_TEXT    {
		$current.merge(this_TEXT_1);
    }

    { 
    newLeafNode(this_TEXT_1, grammarAccess.getRobotTextAccess().getTEXTTerminalRuleCall_0_1()); 
    }
)((
	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRobotTextAccess().getSpaceKeyword_1_0_0()); 
    }

    |    this_STARS_3=RULE_STARS    {
		$current.merge(this_STARS_3);
    }

    { 
    newLeafNode(this_STARS_3, grammarAccess.getRobotTextAccess().getSTARSTerminalRuleCall_1_0_1()); 
    }
)    this_TEXT_4=RULE_TEXT    {
		$current.merge(this_TEXT_4);
    }

    { 
    newLeafNode(this_TEXT_4, grammarAccess.getRobotTextAccess().getTEXTTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleMacroName
entryRuleMacroName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMacroNameRule()); } 
	 iv_ruleMacroName=ruleMacroName 
	 { $current=$iv_ruleMacroName.current.getText(); }  
	 EOF 
;

// Rule MacroName
ruleMacroName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_TEXT_0=RULE_TEXT    {
		$current.merge(this_TEXT_0);
    }

    { 
    newLeafNode(this_TEXT_0, grammarAccess.getMacroNameAccess().getTEXTTerminalRuleCall_0()); 
    }
((
	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMacroNameAccess().getSpaceKeyword_1_0_0()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMacroNameAccess().getAsteriskKeyword_1_0_1()); 
    }
)    this_TEXT_3=RULE_TEXT    {
		$current.merge(this_TEXT_3);
    }

    { 
    newLeafNode(this_TEXT_3, grammarAccess.getMacroNameAccess().getTEXTTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Rule TestCaseSettingName
ruleTestCaseSettingName returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='[Documentation]' 
	{
        $current = grammarAccess.getTestCaseSettingNameAccess().getDOCUMENTATIONEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getTestCaseSettingNameAccess().getDOCUMENTATIONEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='[Timeout]' 
	{
        $current = grammarAccess.getTestCaseSettingNameAccess().getTIMEOUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getTestCaseSettingNameAccess().getTIMEOUTEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='[Tags]' 
	{
        $current = grammarAccess.getTestCaseSettingNameAccess().getTAGSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getTestCaseSettingNameAccess().getTAGSEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='[Template]' 
	{
        $current = grammarAccess.getTestCaseSettingNameAccess().getTEMPLATEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getTestCaseSettingNameAccess().getTEMPLATEEnumLiteralDeclaration_3()); 
    }
));



// Rule KeywordSettingName
ruleKeywordSettingName returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='[Documentation]' 
	{
        $current = grammarAccess.getKeywordSettingNameAccess().getDOCUMENTATIONEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getKeywordSettingNameAccess().getDOCUMENTATIONEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='[Timeout]' 
	{
        $current = grammarAccess.getKeywordSettingNameAccess().getTIMEOUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getKeywordSettingNameAccess().getTIMEOUTEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='[Return]' 
	{
        $current = grammarAccess.getKeywordSettingNameAccess().getRETURNEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getKeywordSettingNameAccess().getRETURNEnumLiteralDeclaration_2()); 
    }
));



// Rule RobotOneValueSetting
ruleRobotOneValueSetting returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Documentation' 
	{
        $current = grammarAccess.getRobotOneValueSettingAccess().getDOCUMENTATIONEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getRobotOneValueSettingAccess().getDOCUMENTATIONEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Test Timeout' 
	{
        $current = grammarAccess.getRobotOneValueSettingAccess().getTEST_TIMEOUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getRobotOneValueSettingAccess().getTEST_TIMEOUTEnumLiteralDeclaration_1()); 
    }
));



// Rule RobotValuesSetting
ruleRobotValuesSetting returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Force Tags' 
	{
        $current = grammarAccess.getRobotValuesSettingAccess().getFORCE_TAGSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getRobotValuesSettingAccess().getFORCE_TAGSEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Default Tags' 
	{
        $current = grammarAccess.getRobotValuesSettingAccess().getDEFAULT_TAGSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getRobotValuesSettingAccess().getDEFAULT_TAGSEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Library' 
	{
        $current = grammarAccess.getRobotValuesSettingAccess().getLIBRARY_IMPORTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getRobotValuesSettingAccess().getLIBRARY_IMPORTEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Resource' 
	{
        $current = grammarAccess.getRobotValuesSettingAccess().getRESOURCE_IMPORTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getRobotValuesSettingAccess().getRESOURCE_IMPORTEnumLiteralDeclaration_3()); 
    }
));



// Rule RobotStepSetting
ruleRobotStepSetting returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Suite Setup' 
	{
        $current = grammarAccess.getRobotStepSettingAccess().getSUITE_SETUPEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getRobotStepSettingAccess().getSUITE_SETUPEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Suite Teardown' 
	{
        $current = grammarAccess.getRobotStepSettingAccess().getSUITE_TEARDOWNEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getRobotStepSettingAccess().getSUITE_TEARDOWNEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Test Setup' 
	{
        $current = grammarAccess.getRobotStepSettingAccess().getTEST_SETUPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getRobotStepSettingAccess().getTEST_SETUPEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Test Teardown' 
	{
        $current = grammarAccess.getRobotStepSettingAccess().getTEST_TEARDOWNEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getRobotStepSettingAccess().getTEST_TEARDOWNEnumLiteralDeclaration_3()); 
    }
));



RULE_SEPARATOR : ' ' ' '+;

RULE_NL : ('\r'|'\n')+;

RULE_TEXT : ~(('='|' '|'\r'|'\n'|'*'|'{'|'}'|'$'|'@'))+;

RULE_STARS : '*'+;

RULE_RBRACKET : '}';

RULE_LBRACKET : '{';

RULE_DOLLAR : '$';

RULE_ATSIGN : '@';

RULE_EQ : '=';

RULE_COMMENT : ' '* '#' ~(('\r'|'\n'))*;


