/*
* generated by Xtext
*/
grammar InternalSpace;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.robotframework.text.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.robotframework.text.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.robotframework.text.services.SpaceGrammarAccess;

}

@parser::members {

 	private SpaceGrammarAccess grammarAccess;
 	
    public InternalSpaceParser(TokenStream input, SpaceGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected SpaceGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getTablesRobotTableParserRuleCall_0_0()); 
	    }
		lv_tables_0_0=ruleRobotTable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"tables",
        		lv_tables_0_0, 
        		"RobotTable");
	        afterParserOrEnumRuleCall();
	    }

)
)this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getModelAccess().getNLTerminalRuleCall_1()); 
    }
)+
;





// Entry rule entryRuleRobotTable
entryRuleRobotTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRobotTableRule()); }
	 iv_ruleRobotTable=ruleRobotTable 
	 { $current=$iv_ruleRobotTable.current; } 
	 EOF 
;

// Rule RobotTable
ruleRobotTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRobotTableAccess().getSettingsTableParserRuleCall_0()); 
    }
    this_SettingsTable_0=ruleSettingsTable
    { 
        $current = $this_SettingsTable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRobotTableAccess().getTestCaseTableParserRuleCall_1()); 
    }
    this_TestCaseTable_1=ruleTestCaseTable
    { 
        $current = $this_TestCaseTable_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRobotTableAccess().getKeywordTableParserRuleCall_2()); 
    }
    this_KeywordTable_2=ruleKeywordTable
    { 
        $current = $this_KeywordTable_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRobotTableAccess().getVariablesTableParserRuleCall_3()); 
    }
    this_VariablesTable_3=ruleVariablesTable
    { 
        $current = $this_VariablesTable_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSettingsTable
entryRuleSettingsTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSettingsTableRule()); }
	 iv_ruleSettingsTable=ruleSettingsTable 
	 { $current=$iv_ruleSettingsTable.current; } 
	 EOF 
;

// Rule SettingsTable
ruleSettingsTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSettingsTableAccess().getHeaderSettingsTableHeaderParserRuleCall_0_0()); 
	    }
		lv_header_0_0=ruleSettingsTableHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSettingsTableRule());
	        }
       		set(
       			$current, 
       			"header",
        		lv_header_0_0, 
        		"SettingsTableHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getSettingsTableAccess().getNLTerminalRuleCall_1_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getSettingsTableAccess().getSettingsSettingParserRuleCall_1_1_0()); 
	    }
		lv_settings_2_0=ruleSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSettingsTableRule());
	        }
       		add(
       			$current, 
       			"settings",
        		lv_settings_2_0, 
        		"Setting");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRuleSettingsTableHeader
entryRuleSettingsTableHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSettingsTableHeaderRule()); } 
	 iv_ruleSettingsTableHeader=ruleSettingsTableHeader 
	 { $current=$iv_ruleSettingsTableHeader.current.getText(); }  
	 EOF 
;

// Rule SettingsTableHeader
ruleSettingsTableHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSettingsTableHeaderAccess().getAsteriskKeyword_0()); 
    }
)+
	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSettingsTableHeaderAccess().getSpaceKeyword_1()); 
    }
    this_SETTINGS_2=RULE_SETTINGS    {
		$current.merge(this_SETTINGS_2);
    }

    { 
    newLeafNode(this_SETTINGS_2, grammarAccess.getSettingsTableHeaderAccess().getSETTINGSTerminalRuleCall_2()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSettingsTableHeaderAccess().getSpaceKeyword_3()); 
    }
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSettingsTableHeaderAccess().getAsteriskKeyword_4()); 
    }
)+)
    ;





// Entry rule entryRuleTestCaseTable
entryRuleTestCaseTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestCaseTableRule()); }
	 iv_ruleTestCaseTable=ruleTestCaseTable 
	 { $current=$iv_ruleTestCaseTable.current; } 
	 EOF 
;

// Rule TestCaseTable
ruleTestCaseTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTestCaseTableAccess().getHeaderTestCaseTableHeaderParserRuleCall_0_0()); 
	    }
		lv_header_0_0=ruleTestCaseTableHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTestCaseTableRule());
	        }
       		set(
       			$current, 
       			"header",
        		lv_header_0_0, 
        		"TestCaseTableHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getTestCaseTableAccess().getNLTerminalRuleCall_1_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getTestCaseTableAccess().getTestsTestCaseParserRuleCall_1_1_0()); 
	    }
		lv_tests_2_0=ruleTestCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTestCaseTableRule());
	        }
       		add(
       			$current, 
       			"tests",
        		lv_tests_2_0, 
        		"TestCase");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRuleTestCaseTableHeader
entryRuleTestCaseTableHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestCaseTableHeaderRule()); } 
	 iv_ruleTestCaseTableHeader=ruleTestCaseTableHeader 
	 { $current=$iv_ruleTestCaseTableHeader.current.getText(); }  
	 EOF 
;

// Rule TestCaseTableHeader
ruleTestCaseTableHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTestCaseTableHeaderAccess().getAsteriskKeyword_0()); 
    }
)+
	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTestCaseTableHeaderAccess().getSpaceKeyword_1()); 
    }
    this_TEST_2=RULE_TEST    {
		$current.merge(this_TEST_2);
    }

    { 
    newLeafNode(this_TEST_2, grammarAccess.getTestCaseTableHeaderAccess().getTESTTerminalRuleCall_2()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTestCaseTableHeaderAccess().getSpaceKeyword_3()); 
    }
    this_CASES_4=RULE_CASES    {
		$current.merge(this_CASES_4);
    }

    { 
    newLeafNode(this_CASES_4, grammarAccess.getTestCaseTableHeaderAccess().getCASESTerminalRuleCall_4()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTestCaseTableHeaderAccess().getSpaceKeyword_5()); 
    }
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTestCaseTableHeaderAccess().getAsteriskKeyword_6()); 
    }
)+)
    ;





// Entry rule entryRuleKeywordTable
entryRuleKeywordTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeywordTableRule()); }
	 iv_ruleKeywordTable=ruleKeywordTable 
	 { $current=$iv_ruleKeywordTable.current; } 
	 EOF 
;

// Rule KeywordTable
ruleKeywordTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getKeywordTableAccess().getHeaderKeywordTableHeaderParserRuleCall_0_0()); 
	    }
		lv_header_0_0=ruleKeywordTableHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordTableRule());
	        }
       		set(
       			$current, 
       			"header",
        		lv_header_0_0, 
        		"KeywordTableHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getKeywordTableAccess().getNLTerminalRuleCall_1_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getKeywordTableAccess().getKeywordsKeywordParserRuleCall_1_1_0()); 
	    }
		lv_keywords_2_0=ruleKeyword		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordTableRule());
	        }
       		add(
       			$current, 
       			"keywords",
        		lv_keywords_2_0, 
        		"Keyword");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRuleKeywordTableHeader
entryRuleKeywordTableHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeywordTableHeaderRule()); } 
	 iv_ruleKeywordTableHeader=ruleKeywordTableHeader 
	 { $current=$iv_ruleKeywordTableHeader.current.getText(); }  
	 EOF 
;

// Rule KeywordTableHeader
ruleKeywordTableHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getKeywordTableHeaderAccess().getAsteriskKeyword_0()); 
    }
)+
	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getKeywordTableHeaderAccess().getSpaceKeyword_1()); 
    }
    this_KEYWORDS_2=RULE_KEYWORDS    {
		$current.merge(this_KEYWORDS_2);
    }

    { 
    newLeafNode(this_KEYWORDS_2, grammarAccess.getKeywordTableHeaderAccess().getKEYWORDSTerminalRuleCall_2()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getKeywordTableHeaderAccess().getSpaceKeyword_3()); 
    }
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getKeywordTableHeaderAccess().getAsteriskKeyword_4()); 
    }
)+)
    ;





// Entry rule entryRuleVariablesTable
entryRuleVariablesTable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariablesTableRule()); }
	 iv_ruleVariablesTable=ruleVariablesTable 
	 { $current=$iv_ruleVariablesTable.current; } 
	 EOF 
;

// Rule VariablesTable
ruleVariablesTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesTableAccess().getHeaderVariablesTableHeaderParserRuleCall_0_0()); 
	    }
		lv_header_0_0=ruleVariablesTableHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesTableRule());
	        }
       		set(
       			$current, 
       			"header",
        		lv_header_0_0, 
        		"VariablesTableHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getVariablesTableAccess().getNLTerminalRuleCall_1_0()); 
    }
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getVariablesTableAccess().getVariablesVariableParserRuleCall_1_1_0()); 
	    }
		lv_variables_2_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariablesTableRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_2_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
))+)
;





// Entry rule entryRuleVariablesTableHeader
entryRuleVariablesTableHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariablesTableHeaderRule()); } 
	 iv_ruleVariablesTableHeader=ruleVariablesTableHeader 
	 { $current=$iv_ruleVariablesTableHeader.current.getText(); }  
	 EOF 
;

// Rule VariablesTableHeader
ruleVariablesTableHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariablesTableHeaderAccess().getAsteriskKeyword_0()); 
    }
)+
	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariablesTableHeaderAccess().getSpaceKeyword_1()); 
    }
    this_VARIABLES_2=RULE_VARIABLES    {
		$current.merge(this_VARIABLES_2);
    }

    { 
    newLeafNode(this_VARIABLES_2, grammarAccess.getVariablesTableHeaderAccess().getVARIABLESTerminalRuleCall_2()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariablesTableHeaderAccess().getSpaceKeyword_3()); 
    }
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVariablesTableHeaderAccess().getAsteriskKeyword_4()); 
    }
)+)
    ;





// Entry rule entryRuleSetting
entryRuleSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSettingRule()); }
	 iv_ruleSetting=ruleSetting 
	 { $current=$iv_ruleSetting.current; } 
	 EOF 
;

// Rule Setting
ruleSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSettingAccess().getValuesSettingParserRuleCall_0()); 
    }
    this_ValuesSetting_0=ruleValuesSetting
    { 
        $current = $this_ValuesSetting_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSettingAccess().getStepSettingParserRuleCall_1()); 
    }
    this_StepSetting_1=ruleStepSetting
    { 
        $current = $this_StepSetting_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTestCase
entryRuleTestCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestCaseRule()); }
	 iv_ruleTestCase=ruleTestCase 
	 { $current=$iv_ruleTestCase.current; } 
	 EOF 
;

// Rule TestCase
ruleTestCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTestCaseAccess().getNameMacroNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleMacroName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTestCaseRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"MacroName");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getTestCaseAccess().getNLTerminalRuleCall_1_0()); 
    }
)+this_SEPARATOR_2=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_2, grammarAccess.getTestCaseAccess().getSEPARATORTerminalRuleCall_1_1()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTestCaseAccess().getSettingsTestCaseSettingParserRuleCall_1_2_0_0()); 
	    }
		lv_settings_3_0=ruleTestCaseSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTestCaseRule());
	        }
       		add(
       			$current, 
       			"settings",
        		lv_settings_3_0, 
        		"TestCaseSetting");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTestCaseAccess().getStepsRobotStepParserRuleCall_1_2_1_0()); 
	    }
		lv_steps_4_0=ruleRobotStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTestCaseRule());
	        }
       		add(
       			$current, 
       			"steps",
        		lv_steps_4_0, 
        		"RobotStep");
	        afterParserOrEnumRuleCall();
	    }

)
)))+)
;





// Entry rule entryRuleKeyword
entryRuleKeyword returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeywordRule()); }
	 iv_ruleKeyword=ruleKeyword 
	 { $current=$iv_ruleKeyword.current; } 
	 EOF 
;

// Rule Keyword
ruleKeyword returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getKeywordAccess().getNameMacroNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleMacroName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"MacroName");
	        afterParserOrEnumRuleCall();
	    }

)
)((this_NL_1=RULE_NL
    { 
    newLeafNode(this_NL_1, grammarAccess.getKeywordAccess().getNLTerminalRuleCall_1_0()); 
    }
)+this_SEPARATOR_2=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_2, grammarAccess.getKeywordAccess().getSEPARATORTerminalRuleCall_1_1()); 
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getKeywordAccess().getSettingsKeywordSettingParserRuleCall_1_2_0_0()); 
	    }
		lv_settings_3_0=ruleKeywordSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordRule());
	        }
       		add(
       			$current, 
       			"settings",
        		lv_settings_3_0, 
        		"KeywordSetting");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getKeywordAccess().getStepsRobotStepParserRuleCall_1_2_1_0()); 
	    }
		lv_steps_4_0=ruleRobotStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordRule());
	        }
       		add(
       			$current, 
       			"steps",
        		lv_steps_4_0, 
        		"RobotStep");
	        afterParserOrEnumRuleCall();
	    }

)
)))+)
;





// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_ruleVariable=ruleVariable 
	 { $current=$iv_ruleVariable.current; } 
	 EOF 
;

// Rule Variable
ruleVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVariableAccess().getScalarVariableParserRuleCall_0()); 
    }
    this_ScalarVariable_0=ruleScalarVariable
    { 
        $current = $this_ScalarVariable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVariableAccess().getListVariableParserRuleCall_1()); 
    }
    this_ListVariable_1=ruleListVariable
    { 
        $current = $this_ListVariable_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleScalarVariable
entryRuleScalarVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScalarVariableRule()); }
	 iv_ruleScalarVariable=ruleScalarVariable 
	 { $current=$iv_ruleScalarVariable.current; } 
	 EOF 
;

// Rule ScalarVariable
ruleScalarVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getScalarVariableAccess().getNameScalarNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleScalarName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScalarVariableRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ScalarName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getScalarVariableAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScalarVariableAccess().getValueRobotTextParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleRobotText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScalarVariableRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"RobotText");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleListVariable
entryRuleListVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListVariableRule()); }
	 iv_ruleListVariable=ruleListVariable 
	 { $current=$iv_ruleListVariable.current; } 
	 EOF 
;

// Rule ListVariable
ruleListVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getListVariableAccess().getNameListNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleListName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListVariableRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ListName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getListVariableAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListVariableAccess().getValueValuesParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListVariableRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Values");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTestCaseSetting
entryRuleTestCaseSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestCaseSettingRule()); }
	 iv_ruleTestCaseSetting=ruleTestCaseSetting 
	 { $current=$iv_ruleTestCaseSetting.current; } 
	 EOF 
;

// Rule TestCaseSetting
ruleTestCaseSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTestCaseSettingAccess().getSetupSettingParserRuleCall_0()); 
    }
    this_SetupSetting_0=ruleSetupSetting
    { 
        $current = $this_SetupSetting_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTestCaseSettingAccess().getTeardownSettingParserRuleCall_1()); 
    }
    this_TeardownSetting_1=ruleTeardownSetting
    { 
        $current = $this_TeardownSetting_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTestCaseSettingAccess().getSomeTestSettingParserRuleCall_2()); 
    }
    this_SomeTestSetting_2=ruleSomeTestSetting
    { 
        $current = $this_SomeTestSetting_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSomeTestSetting
entryRuleSomeTestSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSomeTestSettingRule()); }
	 iv_ruleSomeTestSetting=ruleSomeTestSetting 
	 { $current=$iv_ruleSomeTestSetting.current; } 
	 EOF 
;

// Rule SomeTestSetting
ruleSomeTestSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeTestSettingAccess().getNameDocumentationMacroSettingNameParserRuleCall_0_0_0()); 
	    }
		lv_name_0_1=ruleDocumentationMacroSettingName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeTestSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"DocumentationMacroSettingName");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSomeTestSettingAccess().getNameTimeoutSettingNameParserRuleCall_0_0_1()); 
	    }
		lv_name_0_2=ruleTimeoutSettingName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeTestSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"TimeoutSettingName");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSomeTestSettingAccess().getNameTagsTestSettingNameParserRuleCall_0_0_2()); 
	    }
		lv_name_0_3=ruleTagsTestSettingName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeTestSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_3, 
        		"TagsTestSettingName");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSomeTestSettingAccess().getNameTemplateTestSettingNameParserRuleCall_0_0_3()); 
	    }
		lv_name_0_4=ruleTemplateTestSettingName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeTestSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_4, 
        		"TemplateTestSettingName");
	        afterParserOrEnumRuleCall();
	    }

)

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getSomeTestSettingAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeTestSettingAccess().getValueValuesParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeTestSettingRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Values");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTagsTestSettingName
entryRuleTagsTestSettingName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTagsTestSettingNameRule()); } 
	 iv_ruleTagsTestSettingName=ruleTagsTestSettingName 
	 { $current=$iv_ruleTagsTestSettingName.current.getText(); }  
	 EOF 
;

// Rule TagsTestSettingName
ruleTagsTestSettingName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTagsTestSettingNameAccess().getLeftSquareBracketKeyword_0()); 
    }
    this_TAGS_1=RULE_TAGS    {
		$current.merge(this_TAGS_1);
    }

    { 
    newLeafNode(this_TAGS_1, grammarAccess.getTagsTestSettingNameAccess().getTAGSTerminalRuleCall_1()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTagsTestSettingNameAccess().getRightSquareBracketKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleTemplateTestSettingName
entryRuleTemplateTestSettingName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateTestSettingNameRule()); } 
	 iv_ruleTemplateTestSettingName=ruleTemplateTestSettingName 
	 { $current=$iv_ruleTemplateTestSettingName.current.getText(); }  
	 EOF 
;

// Rule TemplateTestSettingName
ruleTemplateTestSettingName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTemplateTestSettingNameAccess().getLeftSquareBracketKeyword_0()); 
    }
    this_TEMPLATE_1=RULE_TEMPLATE    {
		$current.merge(this_TEMPLATE_1);
    }

    { 
    newLeafNode(this_TEMPLATE_1, grammarAccess.getTemplateTestSettingNameAccess().getTEMPLATETerminalRuleCall_1()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTemplateTestSettingNameAccess().getRightSquareBracketKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleKeywordSetting
entryRuleKeywordSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeywordSettingRule()); }
	 iv_ruleKeywordSetting=ruleKeywordSetting 
	 { $current=$iv_ruleKeywordSetting.current; } 
	 EOF 
;

// Rule KeywordSetting
ruleKeywordSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getKeywordSettingAccess().getSettingArgumentsSettingParserRuleCall_0_0()); 
	    }
		lv_setting_0_1=ruleArgumentsSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordSettingRule());
	        }
       		set(
       			$current, 
       			"setting",
        		lv_setting_0_1, 
        		"ArgumentsSetting");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getKeywordSettingAccess().getSettingTeardownSettingParserRuleCall_0_1()); 
	    }
		lv_setting_0_2=ruleTeardownSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordSettingRule());
	        }
       		set(
       			$current, 
       			"setting",
        		lv_setting_0_2, 
        		"TeardownSetting");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getKeywordSettingAccess().getSettingSomeKeywordSettingParserRuleCall_0_2()); 
	    }
		lv_setting_0_3=ruleSomeKeywordSetting		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeywordSettingRule());
	        }
       		set(
       			$current, 
       			"setting",
        		lv_setting_0_3, 
        		"SomeKeywordSetting");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
;





// Entry rule entryRuleArgumentsSetting
entryRuleArgumentsSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentsSettingRule()); }
	 iv_ruleArgumentsSetting=ruleArgumentsSetting 
	 { $current=$iv_ruleArgumentsSetting.current; } 
	 EOF 
;

// Rule ArgumentsSetting
ruleArgumentsSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentsSettingAccess().getNameArgumentsSettingNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleArgumentsSettingName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentsSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ArgumentsSettingName");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentsSettingAccess().getArgsScalarNameParserRuleCall_1_1_0()); 
	    }
		lv_args_2_0=ruleScalarName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentsSettingRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_2_0, 
        		"ScalarName");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_SEPARATOR_3=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_3, grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_2_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentsSettingAccess().getDefault_argsScalarNameParserRuleCall_2_1_0()); 
	    }
		lv_default_args_4_0=ruleScalarName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentsSettingRule());
	        }
       		add(
       			$current, 
       			"default_args",
        		lv_default_args_4_0, 
        		"ScalarName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArgumentsSettingAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentsSettingAccess().getDefaultsRobotTextParserRuleCall_2_3_0()); 
	    }
		lv_defaults_6_0=ruleRobotText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentsSettingRule());
	        }
       		add(
       			$current, 
       			"defaults",
        		lv_defaults_6_0, 
        		"RobotText");
	        afterParserOrEnumRuleCall();
	    }

)
))*(this_SEPARATOR_7=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_7, grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_3_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getArgumentsSettingAccess().getListNameParserRuleCall_3_1()); 
    }
ruleListName
    { 
        afterParserOrEnumRuleCall();
    }
)?)
;





// Entry rule entryRuleArgumentsSettingName
entryRuleArgumentsSettingName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentsSettingNameRule()); } 
	 iv_ruleArgumentsSettingName=ruleArgumentsSettingName 
	 { $current=$iv_ruleArgumentsSettingName.current.getText(); }  
	 EOF 
;

// Rule ArgumentsSettingName
ruleArgumentsSettingName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getArgumentsSettingNameAccess().getLeftSquareBracketKeyword_0()); 
    }
    this_ARGUMENTS_1=RULE_ARGUMENTS    {
		$current.merge(this_ARGUMENTS_1);
    }

    { 
    newLeafNode(this_ARGUMENTS_1, grammarAccess.getArgumentsSettingNameAccess().getARGUMENTSTerminalRuleCall_1()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getArgumentsSettingNameAccess().getRightSquareBracketKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleTeardownSetting
entryRuleTeardownSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTeardownSettingRule()); }
	 iv_ruleTeardownSetting=ruleTeardownSetting 
	 { $current=$iv_ruleTeardownSetting.current; } 
	 EOF 
;

// Rule TeardownSetting
ruleTeardownSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTeardownSettingAccess().getNameTeardownSettingNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleTeardownSettingName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTeardownSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"TeardownSettingName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getTeardownSettingAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTeardownSettingAccess().getStepExecutingStepParserRuleCall_2_0()); 
	    }
		lv_step_2_0=ruleExecutingStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTeardownSettingRule());
	        }
       		set(
       			$current, 
       			"step",
        		lv_step_2_0, 
        		"ExecutingStep");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTeardownSettingName
entryRuleTeardownSettingName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTeardownSettingNameRule()); } 
	 iv_ruleTeardownSettingName=ruleTeardownSettingName 
	 { $current=$iv_ruleTeardownSettingName.current.getText(); }  
	 EOF 
;

// Rule TeardownSettingName
ruleTeardownSettingName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTeardownSettingNameAccess().getLeftSquareBracketKeyword_0()); 
    }
    this_TEARDOWN_1=RULE_TEARDOWN    {
		$current.merge(this_TEARDOWN_1);
    }

    { 
    newLeafNode(this_TEARDOWN_1, grammarAccess.getTeardownSettingNameAccess().getTEARDOWNTerminalRuleCall_1()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTeardownSettingNameAccess().getRightSquareBracketKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleSetupSetting
entryRuleSetupSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetupSettingRule()); }
	 iv_ruleSetupSetting=ruleSetupSetting 
	 { $current=$iv_ruleSetupSetting.current; } 
	 EOF 
;

// Rule SetupSetting
ruleSetupSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSetupSettingAccess().getNameSetupSettingNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleSetupSettingName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetupSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"SetupSettingName");
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getSetupSettingAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetupSettingAccess().getStepExecutingStepParserRuleCall_2_0()); 
	    }
		lv_step_2_0=ruleExecutingStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetupSettingRule());
	        }
       		set(
       			$current, 
       			"step",
        		lv_step_2_0, 
        		"ExecutingStep");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSetupSettingName
entryRuleSetupSettingName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetupSettingNameRule()); } 
	 iv_ruleSetupSettingName=ruleSetupSettingName 
	 { $current=$iv_ruleSetupSettingName.current.getText(); }  
	 EOF 
;

// Rule SetupSettingName
ruleSetupSettingName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSetupSettingNameAccess().getLeftSquareBracketKeyword_0()); 
    }
    this_SETUP_1=RULE_SETUP    {
		$current.merge(this_SETUP_1);
    }

    { 
    newLeafNode(this_SETUP_1, grammarAccess.getSetupSettingNameAccess().getSETUPTerminalRuleCall_1()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSetupSettingNameAccess().getRightSquareBracketKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleSomeKeywordSetting
entryRuleSomeKeywordSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSomeKeywordSettingRule()); }
	 iv_ruleSomeKeywordSetting=ruleSomeKeywordSetting 
	 { $current=$iv_ruleSomeKeywordSetting.current; } 
	 EOF 
;

// Rule SomeKeywordSetting
ruleSomeKeywordSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeKeywordSettingAccess().getNameDocumentationMacroSettingNameParserRuleCall_0_0_0()); 
	    }
		lv_name_0_1=ruleDocumentationMacroSettingName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeKeywordSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"DocumentationMacroSettingName");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSomeKeywordSettingAccess().getNameTimeoutSettingNameParserRuleCall_0_0_1()); 
	    }
		lv_name_0_2=ruleTimeoutSettingName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeKeywordSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"TimeoutSettingName");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getSomeKeywordSettingAccess().getNameReturnKeywordSettingNameParserRuleCall_0_0_2()); 
	    }
		lv_name_0_3=ruleReturnKeywordSettingName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeKeywordSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_3, 
        		"ReturnKeywordSettingName");
	        afterParserOrEnumRuleCall();
	    }

)

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getSomeKeywordSettingAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSomeKeywordSettingAccess().getValueValuesParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSomeKeywordSettingRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Values");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTimeoutSettingName
entryRuleTimeoutSettingName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeoutSettingNameRule()); } 
	 iv_ruleTimeoutSettingName=ruleTimeoutSettingName 
	 { $current=$iv_ruleTimeoutSettingName.current.getText(); }  
	 EOF 
;

// Rule TimeoutSettingName
ruleTimeoutSettingName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimeoutSettingNameAccess().getLeftSquareBracketKeyword_0()); 
    }
    this_TIMEOUT_1=RULE_TIMEOUT    {
		$current.merge(this_TIMEOUT_1);
    }

    { 
    newLeafNode(this_TIMEOUT_1, grammarAccess.getTimeoutSettingNameAccess().getTIMEOUTTerminalRuleCall_1()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTimeoutSettingNameAccess().getRightSquareBracketKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleDocumentationMacroSettingName
entryRuleDocumentationMacroSettingName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocumentationMacroSettingNameRule()); } 
	 iv_ruleDocumentationMacroSettingName=ruleDocumentationMacroSettingName 
	 { $current=$iv_ruleDocumentationMacroSettingName.current.getText(); }  
	 EOF 
;

// Rule DocumentationMacroSettingName
ruleDocumentationMacroSettingName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDocumentationMacroSettingNameAccess().getLeftSquareBracketKeyword_0()); 
    }
    this_DOCUMENTATION_1=RULE_DOCUMENTATION    {
		$current.merge(this_DOCUMENTATION_1);
    }

    { 
    newLeafNode(this_DOCUMENTATION_1, grammarAccess.getDocumentationMacroSettingNameAccess().getDOCUMENTATIONTerminalRuleCall_1()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDocumentationMacroSettingNameAccess().getRightSquareBracketKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleReturnKeywordSettingName
entryRuleReturnKeywordSettingName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getReturnKeywordSettingNameRule()); } 
	 iv_ruleReturnKeywordSettingName=ruleReturnKeywordSettingName 
	 { $current=$iv_ruleReturnKeywordSettingName.current.getText(); }  
	 EOF 
;

// Rule ReturnKeywordSettingName
ruleReturnKeywordSettingName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReturnKeywordSettingNameAccess().getLeftSquareBracketKeyword_0()); 
    }
    this_RETURN_1=RULE_RETURN    {
		$current.merge(this_RETURN_1);
    }

    { 
    newLeafNode(this_RETURN_1, grammarAccess.getReturnKeywordSettingNameAccess().getRETURNTerminalRuleCall_1()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReturnKeywordSettingNameAccess().getRightSquareBracketKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleValuesSetting
entryRuleValuesSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValuesSettingRule()); }
	 iv_ruleValuesSetting=ruleValuesSetting 
	 { $current=$iv_ruleValuesSetting.current; } 
	 EOF 
;

// Rule ValuesSetting
ruleValuesSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		{ 
	        newCompositeNode(grammarAccess.getValuesSettingAccess().getNameForceTagsParserRuleCall_0_0_0()); 
	    }
		lv_name_0_1=ruleForceTags		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValuesSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"ForceTags");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getValuesSettingAccess().getNameDefaultTagsParserRuleCall_0_0_1()); 
	    }
		lv_name_0_2=ruleDefaultTags		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValuesSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"DefaultTags");
	        afterParserOrEnumRuleCall();
	    }

    |		lv_name_0_3=RULE_LIBRARY
		{
			newLeafNode(lv_name_0_3, grammarAccess.getValuesSettingAccess().getNameLIBRARYTerminalRuleCall_0_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValuesSettingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_3, 
        		"LIBRARY");
	    }

    |		lv_name_0_4=RULE_RESOURCE
		{
			newLeafNode(lv_name_0_4, grammarAccess.getValuesSettingAccess().getNameRESOURCETerminalRuleCall_0_0_3()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValuesSettingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_4, 
        		"RESOURCE");
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getValuesSettingAccess().getNameTestTemplateParserRuleCall_0_0_4()); 
	    }
		lv_name_0_5=ruleTestTemplate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValuesSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_5, 
        		"TestTemplate");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getValuesSettingAccess().getNameTestTimeoutParserRuleCall_0_0_5()); 
	    }
		lv_name_0_6=ruleTestTimeout		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValuesSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_6, 
        		"TestTimeout");
	        afterParserOrEnumRuleCall();
	    }

    |		lv_name_0_7=RULE_DOCUMENTATION
		{
			newLeafNode(lv_name_0_7, grammarAccess.getValuesSettingAccess().getNameDOCUMENTATIONTerminalRuleCall_0_0_6()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValuesSettingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_7, 
        		"DOCUMENTATION");
	    }

)

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getValuesSettingAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValuesSettingAccess().getValueValuesParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValuesSettingRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Values");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleForceTags
entryRuleForceTags returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getForceTagsRule()); } 
	 iv_ruleForceTags=ruleForceTags 
	 { $current=$iv_ruleForceTags.current.getText(); }  
	 EOF 
;

// Rule ForceTags
ruleForceTags returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_FORCE_0=RULE_FORCE    {
		$current.merge(this_FORCE_0);
    }

    { 
    newLeafNode(this_FORCE_0, grammarAccess.getForceTagsAccess().getFORCETerminalRuleCall_0()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getForceTagsAccess().getSpaceKeyword_1()); 
    }
    this_TAGS_2=RULE_TAGS    {
		$current.merge(this_TAGS_2);
    }

    { 
    newLeafNode(this_TAGS_2, grammarAccess.getForceTagsAccess().getTAGSTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleDefaultTags
entryRuleDefaultTags returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultTagsRule()); } 
	 iv_ruleDefaultTags=ruleDefaultTags 
	 { $current=$iv_ruleDefaultTags.current.getText(); }  
	 EOF 
;

// Rule DefaultTags
ruleDefaultTags returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_DEFAULT_0=RULE_DEFAULT    {
		$current.merge(this_DEFAULT_0);
    }

    { 
    newLeafNode(this_DEFAULT_0, grammarAccess.getDefaultTagsAccess().getDEFAULTTerminalRuleCall_0()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDefaultTagsAccess().getSpaceKeyword_1()); 
    }
    this_TAGS_2=RULE_TAGS    {
		$current.merge(this_TAGS_2);
    }

    { 
    newLeafNode(this_TAGS_2, grammarAccess.getDefaultTagsAccess().getTAGSTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleTestTemplate
entryRuleTestTemplate returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestTemplateRule()); } 
	 iv_ruleTestTemplate=ruleTestTemplate 
	 { $current=$iv_ruleTestTemplate.current.getText(); }  
	 EOF 
;

// Rule TestTemplate
ruleTestTemplate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_TEST_0=RULE_TEST    {
		$current.merge(this_TEST_0);
    }

    { 
    newLeafNode(this_TEST_0, grammarAccess.getTestTemplateAccess().getTESTTerminalRuleCall_0()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTestTemplateAccess().getSpaceKeyword_1()); 
    }
    this_TEMPLATE_2=RULE_TEMPLATE    {
		$current.merge(this_TEMPLATE_2);
    }

    { 
    newLeafNode(this_TEMPLATE_2, grammarAccess.getTestTemplateAccess().getTEMPLATETerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleTestTimeout
entryRuleTestTimeout returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestTimeoutRule()); } 
	 iv_ruleTestTimeout=ruleTestTimeout 
	 { $current=$iv_ruleTestTimeout.current.getText(); }  
	 EOF 
;

// Rule TestTimeout
ruleTestTimeout returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_TEST_0=RULE_TEST    {
		$current.merge(this_TEST_0);
    }

    { 
    newLeafNode(this_TEST_0, grammarAccess.getTestTimeoutAccess().getTESTTerminalRuleCall_0()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTestTimeoutAccess().getSpaceKeyword_1()); 
    }
    this_TIMEOUT_2=RULE_TIMEOUT    {
		$current.merge(this_TIMEOUT_2);
    }

    { 
    newLeafNode(this_TIMEOUT_2, grammarAccess.getTestTimeoutAccess().getTIMEOUTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleStepSetting
entryRuleStepSetting returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStepSettingRule()); }
	 iv_ruleStepSetting=ruleStepSetting 
	 { $current=$iv_ruleStepSetting.current; } 
	 EOF 
;

// Rule StepSetting
ruleStepSetting returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		{ 
	        newCompositeNode(grammarAccess.getStepSettingAccess().getNameSuiteSetupParserRuleCall_0_0_0()); 
	    }
		lv_name_0_1=ruleSuiteSetup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStepSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_1, 
        		"SuiteSetup");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getStepSettingAccess().getNameSuiteTeardownParserRuleCall_0_0_1()); 
	    }
		lv_name_0_2=ruleSuiteTeardown		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStepSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_2, 
        		"SuiteTeardown");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getStepSettingAccess().getNameTestSetupParserRuleCall_0_0_2()); 
	    }
		lv_name_0_3=ruleTestSetup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStepSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_3, 
        		"TestSetup");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getStepSettingAccess().getNameTestTeardownParserRuleCall_0_0_3()); 
	    }
		lv_name_0_4=ruleTestTeardown		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStepSettingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_4, 
        		"TestTeardown");
	        afterParserOrEnumRuleCall();
	    }

)

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getStepSettingAccess().getSEPARATORTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStepSettingAccess().getValueExecutingStepParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleExecutingStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStepSettingRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"ExecutingStep");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSuiteSetup
entryRuleSuiteSetup returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSuiteSetupRule()); } 
	 iv_ruleSuiteSetup=ruleSuiteSetup 
	 { $current=$iv_ruleSuiteSetup.current.getText(); }  
	 EOF 
;

// Rule SuiteSetup
ruleSuiteSetup returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_SUITE_0=RULE_SUITE    {
		$current.merge(this_SUITE_0);
    }

    { 
    newLeafNode(this_SUITE_0, grammarAccess.getSuiteSetupAccess().getSUITETerminalRuleCall_0()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSuiteSetupAccess().getSpaceKeyword_1()); 
    }
    this_SETUP_2=RULE_SETUP    {
		$current.merge(this_SETUP_2);
    }

    { 
    newLeafNode(this_SETUP_2, grammarAccess.getSuiteSetupAccess().getSETUPTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleSuiteTeardown
entryRuleSuiteTeardown returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSuiteTeardownRule()); } 
	 iv_ruleSuiteTeardown=ruleSuiteTeardown 
	 { $current=$iv_ruleSuiteTeardown.current.getText(); }  
	 EOF 
;

// Rule SuiteTeardown
ruleSuiteTeardown returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_SUITE_0=RULE_SUITE    {
		$current.merge(this_SUITE_0);
    }

    { 
    newLeafNode(this_SUITE_0, grammarAccess.getSuiteTeardownAccess().getSUITETerminalRuleCall_0()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSuiteTeardownAccess().getSpaceKeyword_1()); 
    }
    this_TEARDOWN_2=RULE_TEARDOWN    {
		$current.merge(this_TEARDOWN_2);
    }

    { 
    newLeafNode(this_TEARDOWN_2, grammarAccess.getSuiteTeardownAccess().getTEARDOWNTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleTestSetup
entryRuleTestSetup returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestSetupRule()); } 
	 iv_ruleTestSetup=ruleTestSetup 
	 { $current=$iv_ruleTestSetup.current.getText(); }  
	 EOF 
;

// Rule TestSetup
ruleTestSetup returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_TEST_0=RULE_TEST    {
		$current.merge(this_TEST_0);
    }

    { 
    newLeafNode(this_TEST_0, grammarAccess.getTestSetupAccess().getTESTTerminalRuleCall_0()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTestSetupAccess().getSpaceKeyword_1()); 
    }
    this_SETUP_2=RULE_SETUP    {
		$current.merge(this_SETUP_2);
    }

    { 
    newLeafNode(this_SETUP_2, grammarAccess.getTestSetupAccess().getSETUPTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleTestTeardown
entryRuleTestTeardown returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestTeardownRule()); } 
	 iv_ruleTestTeardown=ruleTestTeardown 
	 { $current=$iv_ruleTestTeardown.current.getText(); }  
	 EOF 
;

// Rule TestTeardown
ruleTestTeardown returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_TEST_0=RULE_TEST    {
		$current.merge(this_TEST_0);
    }

    { 
    newLeafNode(this_TEST_0, grammarAccess.getTestTeardownAccess().getTESTTerminalRuleCall_0()); 
    }

	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTestTeardownAccess().getSpaceKeyword_1()); 
    }
    this_TEARDOWN_2=RULE_TEARDOWN    {
		$current.merge(this_TEARDOWN_2);
    }

    { 
    newLeafNode(this_TEARDOWN_2, grammarAccess.getTestTeardownAccess().getTEARDOWNTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleRobotStep
entryRuleRobotStep returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRobotStepRule()); }
	 iv_ruleRobotStep=ruleRobotStep 
	 { $current=$iv_ruleRobotStep.current; } 
	 EOF 
;

// Rule RobotStep
ruleRobotStep returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRobotStepAccess().getExecutingStepParserRuleCall_0()); 
    }
    this_ExecutingStep_0=ruleExecutingStep
    { 
        $current = $this_ExecutingStep_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRobotStepAccess().getAssigningStepParserRuleCall_1()); 
    }
    this_AssigningStep_1=ruleAssigningStep
    { 
        $current = $this_AssigningStep_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExecutingStep
entryRuleExecutingStep returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExecutingStepRule()); }
	 iv_ruleExecutingStep=ruleExecutingStep 
	 { $current=$iv_ruleExecutingStep.current; } 
	 EOF 
;

// Rule ExecutingStep
ruleExecutingStep returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExecutingStepRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getExecutingStepAccess().getKeywordKeywordCrossReference_0_0()); 
	    }
		ruleMacroName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getExecutingStepAccess().getSEPARATORTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExecutingStepAccess().getValuesRobotTextParserRuleCall_1_1_0()); 
	    }
		lv_values_2_0=ruleRobotText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecutingStepRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"RobotText");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAssigningStep
entryRuleAssigningStep returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssigningStepRule()); }
	 iv_ruleAssigningStep=ruleAssigningStep 
	 { $current=$iv_ruleAssigningStep.current; } 
	 EOF 
;

// Rule AssigningStep
ruleAssigningStep returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssigningStepRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAssigningStepAccess().getVarsVariableCrossReference_0_0_0()); 
	    }
		ruleScalarName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getAssigningStepAccess().getSEPARATORTerminalRuleCall_0_1()); 
    }
)*((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssigningStepRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAssigningStepAccess().getVarsVariableCrossReference_1_0_0()); 
	    }
		ruleScalarName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssigningStepRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAssigningStepAccess().getVarsVariableCrossReference_1_1_0()); 
	    }
		ruleListName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))((	otherlv_4=' ' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAssigningStepAccess().getSpaceKeyword_2_0());
    }
)?	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAssigningStepAccess().getEqualsSignKeyword_2_1());
    }
)?this_SEPARATOR_6=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_6, grammarAccess.getAssigningStepAccess().getSEPARATORTerminalRuleCall_3()); 
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssigningStepRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAssigningStepAccess().getKeywordKeywordCrossReference_4_0()); 
	    }
		ruleMacroName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(this_SEPARATOR_8=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_8, grammarAccess.getAssigningStepAccess().getSEPARATORTerminalRuleCall_5_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssigningStepAccess().getValuesRobotTextParserRuleCall_5_1_0()); 
	    }
		lv_values_9_0=ruleRobotText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssigningStepRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_9_0, 
        		"RobotText");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleValues
entryRuleValues returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValuesRule()); }
	 iv_ruleValues=ruleValues 
	 { $current=$iv_ruleValues.current; } 
	 EOF 
;

// Rule Values
ruleValues returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValuesAccess().getValRobotTextParserRuleCall_0_0()); 
	    }
		lv_val_0_0=ruleRobotText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValuesRule());
	        }
       		set(
       			$current, 
       			"val",
        		lv_val_0_0, 
        		"RobotText");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_SEPARATOR_1=RULE_SEPARATOR
    { 
    newLeafNode(this_SEPARATOR_1, grammarAccess.getValuesAccess().getSEPARATORTerminalRuleCall_1_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValuesAccess().getOthersRobotTextParserRuleCall_1_1_0()); 
	    }
		lv_others_2_0=ruleRobotText		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValuesRule());
	        }
       		add(
       			$current, 
       			"others",
        		lv_others_2_0, 
        		"RobotText");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleScalarName
entryRuleScalarName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getScalarNameRule()); } 
	 iv_ruleScalarName=ruleScalarName 
	 { $current=$iv_ruleScalarName.current.getText(); }  
	 EOF 
;

// Rule ScalarName
ruleScalarName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='$' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getScalarNameAccess().getDollarSignKeyword_0()); 
    }

	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getScalarNameAccess().getLeftCurlyBracketKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getScalarNameAccess().getRobotTextInVariableNameParserRuleCall_2()); 
    }
    this_RobotTextInVariableName_2=ruleRobotTextInVariableName    {
		$current.merge(this_RobotTextInVariableName_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
((
	'}' 
)=>
	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getScalarNameAccess().getRightCurlyBracketKeyword_3()); 
    }
))
    ;





// Entry rule entryRuleListName
entryRuleListName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getListNameRule()); } 
	 iv_ruleListName=ruleListName 
	 { $current=$iv_ruleListName.current.getText(); }  
	 EOF 
;

// Rule ListName
ruleListName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='@' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getListNameAccess().getCommercialAtKeyword_0()); 
    }

	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getListNameAccess().getLeftCurlyBracketKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getListNameAccess().getRobotTextInVariableNameParserRuleCall_2()); 
    }
    this_RobotTextInVariableName_2=ruleRobotTextInVariableName    {
		$current.merge(this_RobotTextInVariableName_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
((
	'}' 
)=>
	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getListNameAccess().getRightCurlyBracketKeyword_3()); 
    }
))
    ;





// Entry rule entryRuleVariableName
entryRuleVariableName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableNameRule()); } 
	 iv_ruleVariableName=ruleVariableName 
	 { $current=$iv_ruleVariableName.current.getText(); }  
	 EOF 
;

// Rule VariableName
ruleVariableName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVariableNameAccess().getScalarNameParserRuleCall_0()); 
    }
    this_ScalarName_0=ruleScalarName    {
		$current.merge(this_ScalarName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVariableNameAccess().getListNameParserRuleCall_1()); 
    }
    this_ListName_1=ruleListName    {
		$current.merge(this_ListName_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleRobotText
entryRuleRobotText returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRobotTextRule()); } 
	 iv_ruleRobotText=ruleRobotText 
	 { $current=$iv_ruleRobotText.current.getText(); }  
	 EOF 
;

// Rule RobotText
ruleRobotText returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRobotTextAccess().getRobotTextPartParserRuleCall_0()); 
    }
    this_RobotTextPart_0=ruleRobotTextPart    {
		$current.merge(this_RobotTextPart_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRobotTextAccess().getSpaceKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getRobotTextAccess().getRobotTextPartParserRuleCall_1_1()); 
    }
    this_RobotTextPart_2=ruleRobotTextPart    {
		$current.merge(this_RobotTextPart_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleRobotTextPart
entryRuleRobotTextPart returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRobotTextPartRule()); } 
	 iv_ruleRobotTextPart=ruleRobotTextPart 
	 { $current=$iv_ruleRobotTextPart.current.getText(); }  
	 EOF 
;

// Rule RobotTextPart
ruleRobotTextPart returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRobotTextPartAccess().getSpecialCharParserRuleCall_0()); 
    }
    this_SpecialChar_0=ruleSpecialChar    {
		$current.merge(this_SpecialChar_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRobotTextPartAccess().getLeftCurlyBracketKeyword_1()); 
    }

    |    this_TEXT_2=RULE_TEXT    {
		$current.merge(this_TEXT_2);
    }

    { 
    newLeafNode(this_TEXT_2, grammarAccess.getRobotTextPartAccess().getTEXTTerminalRuleCall_2()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getRobotTextPartAccess().getReservedWordParserRuleCall_3()); 
    }
    this_ReservedWord_3=ruleReservedWord    {
		$current.merge(this_ReservedWord_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRobotTextPartAccess().getVariableNameParserRuleCall_4()); 
    }
    this_VariableName_4=ruleVariableName    {
		$current.merge(this_VariableName_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)+
    ;





// Entry rule entryRuleRobotTextInVariableName
entryRuleRobotTextInVariableName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRobotTextInVariableNameRule()); } 
	 iv_ruleRobotTextInVariableName=ruleRobotTextInVariableName 
	 { $current=$iv_ruleRobotTextInVariableName.current.getText(); }  
	 EOF 
;

// Rule RobotTextInVariableName
ruleRobotTextInVariableName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRobotTextInVariableNameAccess().getRobotTextPartInVariableNameParserRuleCall_0()); 
    }
    this_RobotTextPartInVariableName_0=ruleRobotTextPartInVariableName    {
		$current.merge(this_RobotTextPartInVariableName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRobotTextInVariableNameAccess().getSpaceKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getRobotTextInVariableNameAccess().getRobotTextPartInVariableNameParserRuleCall_1_1()); 
    }
    this_RobotTextPartInVariableName_2=ruleRobotTextPartInVariableName    {
		$current.merge(this_RobotTextPartInVariableName_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleRobotTextPartInVariableName
entryRuleRobotTextPartInVariableName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRobotTextPartInVariableNameRule()); } 
	 iv_ruleRobotTextPartInVariableName=ruleRobotTextPartInVariableName 
	 { $current=$iv_ruleRobotTextPartInVariableName.current.getText(); }  
	 EOF 
;

// Rule RobotTextPartInVariableName
ruleRobotTextPartInVariableName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getRobotTextPartInVariableNameAccess().getRobotTextSubpartInVariableNameParserRuleCall_0()); 
    }
    this_RobotTextSubpartInVariableName_0=ruleRobotTextSubpartInVariableName    {
		$current.merge(this_RobotTextSubpartInVariableName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)+
    |((
    { 
        newCompositeNode(grammarAccess.getRobotTextPartInVariableNameAccess().getRobotTextSubpartInVariableNameParserRuleCall_1_0()); 
    }
    this_RobotTextSubpartInVariableName_1=ruleRobotTextSubpartInVariableName    {
		$current.merge(this_RobotTextSubpartInVariableName_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*(
	kw='{' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRobotTextPartInVariableNameAccess().getLeftCurlyBracketKeyword_1_1_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getRobotTextPartInVariableNameAccess().getRobotTextSubpartInVariableNameParserRuleCall_1_1_1()); 
    }
    this_RobotTextSubpartInVariableName_3=ruleRobotTextSubpartInVariableName    {
		$current.merge(this_RobotTextSubpartInVariableName_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*
	kw='}' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRobotTextPartInVariableNameAccess().getRightCurlyBracketKeyword_1_1_2()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getRobotTextPartInVariableNameAccess().getRobotTextSubpartInVariableNameParserRuleCall_1_1_3()); 
    }
    this_RobotTextSubpartInVariableName_5=ruleRobotTextSubpartInVariableName    {
		$current.merge(this_RobotTextSubpartInVariableName_5);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)+))
    ;





// Entry rule entryRuleRobotTextSubpartInVariableName
entryRuleRobotTextSubpartInVariableName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRobotTextSubpartInVariableNameRule()); } 
	 iv_ruleRobotTextSubpartInVariableName=ruleRobotTextSubpartInVariableName 
	 { $current=$iv_ruleRobotTextSubpartInVariableName.current.getText(); }  
	 EOF 
;

// Rule RobotTextSubpartInVariableName
ruleRobotTextSubpartInVariableName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRobotTextSubpartInVariableNameAccess().getSpecialCharParserRuleCall_0()); 
    }
    this_SpecialChar_0=ruleSpecialChar    {
		$current.merge(this_SpecialChar_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_TEXT_1=RULE_TEXT    {
		$current.merge(this_TEXT_1);
    }

    { 
    newLeafNode(this_TEXT_1, grammarAccess.getRobotTextSubpartInVariableNameAccess().getTEXTTerminalRuleCall_1()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getRobotTextSubpartInVariableNameAccess().getReservedWordParserRuleCall_2()); 
    }
    this_ReservedWord_2=ruleReservedWord    {
		$current.merge(this_ReservedWord_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='$' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRobotTextSubpartInVariableNameAccess().getDollarSignKeyword_3()); 
    }

    |
	kw='@' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRobotTextSubpartInVariableNameAccess().getCommercialAtKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleMacroName
entryRuleMacroName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMacroNameRule()); } 
	 iv_ruleMacroName=ruleMacroName 
	 { $current=$iv_ruleMacroName.current.getText(); }  
	 EOF 
;

// Rule MacroName
ruleMacroName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMacroNameAccess().getMacroNamePartParserRuleCall_0()); 
    }
    this_MacroNamePart_0=ruleMacroNamePart    {
		$current.merge(this_MacroNamePart_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw=' ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMacroNameAccess().getSpaceKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getMacroNameAccess().getMacroNamePartParserRuleCall_1_1()); 
    }
    this_MacroNamePart_2=ruleMacroNamePart    {
		$current.merge(this_MacroNamePart_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleMacroNamePart
entryRuleMacroNamePart returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMacroNamePartRule()); } 
	 iv_ruleMacroNamePart=ruleMacroNamePart 
	 { $current=$iv_ruleMacroNamePart.current.getText(); }  
	 EOF 
;

// Rule MacroNamePart
ruleMacroNamePart returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_TEXT_0=RULE_TEXT    {
		$current.merge(this_TEXT_0);
    }

    { 
    newLeafNode(this_TEXT_0, grammarAccess.getMacroNamePartAccess().getTEXTTerminalRuleCall_0()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getMacroNamePartAccess().getReservedWordParserRuleCall_1()); 
    }
    this_ReservedWord_1=ruleReservedWord    {
		$current.merge(this_ReservedWord_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='$' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMacroNamePartAccess().getDollarSignKeyword_2()); 
    }

    |
	kw='@' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMacroNamePartAccess().getCommercialAtKeyword_3()); 
    }
)+
    ;





// Entry rule entryRuleReservedWord
entryRuleReservedWord returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getReservedWordRule()); } 
	 iv_ruleReservedWord=ruleReservedWord 
	 { $current=$iv_ruleReservedWord.current.getText(); }  
	 EOF 
;

// Rule ReservedWord
ruleReservedWord returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_TEST_0=RULE_TEST    {
		$current.merge(this_TEST_0);
    }

    { 
    newLeafNode(this_TEST_0, grammarAccess.getReservedWordAccess().getTESTTerminalRuleCall_0()); 
    }

    |    this_CASES_1=RULE_CASES    {
		$current.merge(this_CASES_1);
    }

    { 
    newLeafNode(this_CASES_1, grammarAccess.getReservedWordAccess().getCASESTerminalRuleCall_1()); 
    }

    |    this_SETTINGS_2=RULE_SETTINGS    {
		$current.merge(this_SETTINGS_2);
    }

    { 
    newLeafNode(this_SETTINGS_2, grammarAccess.getReservedWordAccess().getSETTINGSTerminalRuleCall_2()); 
    }

    |    this_KEYWORDS_3=RULE_KEYWORDS    {
		$current.merge(this_KEYWORDS_3);
    }

    { 
    newLeafNode(this_KEYWORDS_3, grammarAccess.getReservedWordAccess().getKEYWORDSTerminalRuleCall_3()); 
    }

    |    this_VARIABLES_4=RULE_VARIABLES    {
		$current.merge(this_VARIABLES_4);
    }

    { 
    newLeafNode(this_VARIABLES_4, grammarAccess.getReservedWordAccess().getVARIABLESTerminalRuleCall_4()); 
    }

    |    this_SUITE_5=RULE_SUITE    {
		$current.merge(this_SUITE_5);
    }

    { 
    newLeafNode(this_SUITE_5, grammarAccess.getReservedWordAccess().getSUITETerminalRuleCall_5()); 
    }

    |    this_SETUP_6=RULE_SETUP    {
		$current.merge(this_SETUP_6);
    }

    { 
    newLeafNode(this_SETUP_6, grammarAccess.getReservedWordAccess().getSETUPTerminalRuleCall_6()); 
    }

    |    this_TEARDOWN_7=RULE_TEARDOWN    {
		$current.merge(this_TEARDOWN_7);
    }

    { 
    newLeafNode(this_TEARDOWN_7, grammarAccess.getReservedWordAccess().getTEARDOWNTerminalRuleCall_7()); 
    }

    |    this_TAGS_8=RULE_TAGS    {
		$current.merge(this_TAGS_8);
    }

    { 
    newLeafNode(this_TAGS_8, grammarAccess.getReservedWordAccess().getTAGSTerminalRuleCall_8()); 
    }

    |    this_TIMEOUT_9=RULE_TIMEOUT    {
		$current.merge(this_TIMEOUT_9);
    }

    { 
    newLeafNode(this_TIMEOUT_9, grammarAccess.getReservedWordAccess().getTIMEOUTTerminalRuleCall_9()); 
    }

    |    this_TEMPLATE_10=RULE_TEMPLATE    {
		$current.merge(this_TEMPLATE_10);
    }

    { 
    newLeafNode(this_TEMPLATE_10, grammarAccess.getReservedWordAccess().getTEMPLATETerminalRuleCall_10()); 
    }

    |    this_DEFAULT_11=RULE_DEFAULT    {
		$current.merge(this_DEFAULT_11);
    }

    { 
    newLeafNode(this_DEFAULT_11, grammarAccess.getReservedWordAccess().getDEFAULTTerminalRuleCall_11()); 
    }

    |    this_FORCE_12=RULE_FORCE    {
		$current.merge(this_FORCE_12);
    }

    { 
    newLeafNode(this_FORCE_12, grammarAccess.getReservedWordAccess().getFORCETerminalRuleCall_12()); 
    }

    |    this_DOCUMENTATION_13=RULE_DOCUMENTATION    {
		$current.merge(this_DOCUMENTATION_13);
    }

    { 
    newLeafNode(this_DOCUMENTATION_13, grammarAccess.getReservedWordAccess().getDOCUMENTATIONTerminalRuleCall_13()); 
    }

    |    this_RESOURCE_14=RULE_RESOURCE    {
		$current.merge(this_RESOURCE_14);
    }

    { 
    newLeafNode(this_RESOURCE_14, grammarAccess.getReservedWordAccess().getRESOURCETerminalRuleCall_14()); 
    }

    |    this_LIBRARY_15=RULE_LIBRARY    {
		$current.merge(this_LIBRARY_15);
    }

    { 
    newLeafNode(this_LIBRARY_15, grammarAccess.getReservedWordAccess().getLIBRARYTerminalRuleCall_15()); 
    }

    |    this_RETURN_16=RULE_RETURN    {
		$current.merge(this_RETURN_16);
    }

    { 
    newLeafNode(this_RETURN_16, grammarAccess.getReservedWordAccess().getRETURNTerminalRuleCall_16()); 
    }

    |    this_ARGUMENTS_17=RULE_ARGUMENTS    {
		$current.merge(this_ARGUMENTS_17);
    }

    { 
    newLeafNode(this_ARGUMENTS_17, grammarAccess.getReservedWordAccess().getARGUMENTSTerminalRuleCall_17()); 
    }
)
    ;





// Entry rule entryRuleSpecialChar
entryRuleSpecialChar returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecialCharRule()); } 
	 iv_ruleSpecialChar=ruleSpecialChar 
	 { $current=$iv_ruleSpecialChar.current.getText(); }  
	 EOF 
;

// Rule SpecialChar
ruleSpecialChar returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCharAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCharAccess().getLeftSquareBracketKeyword_1()); 
    }

    |
	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCharAccess().getRightSquareBracketKeyword_2()); 
    }

    |
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSpecialCharAccess().getEqualsSignKeyword_3()); 
    }
)
    ;





RULE_NL : ('\r'|'\n')+;

RULE_TEST : 'Test';

RULE_CASES : 'Cases';

RULE_SETTINGS : 'Settings';

RULE_KEYWORDS : 'Keywords';

RULE_VARIABLES : 'Variables';

RULE_SUITE : 'Suite';

RULE_SETUP : 'Setup';

RULE_TEARDOWN : 'Teardown';

RULE_TAGS : 'Tags';

RULE_TIMEOUT : 'Timeout';

RULE_TEMPLATE : 'Template';

RULE_DEFAULT : 'Default';

RULE_FORCE : 'Force';

RULE_DOCUMENTATION : 'Documentation';

RULE_RESOURCE : 'Resource';

RULE_LIBRARY : 'Library';

RULE_RETURN : 'Return';

RULE_ARGUMENTS : 'Arguments';

RULE_TEXT : ~(('='|' '|'\r'|'\n'|'*'|'{'|'}'|'$'|'@'|'['|']'))+;

RULE_SEPARATOR : ' ' ' '+;

RULE_COMMENT : ' '* '#' ~(('\r'|'\n'))*;


