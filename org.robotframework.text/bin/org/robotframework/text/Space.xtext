grammar org.robotframework.text.Space

hidden(COMMENT)

import 'http://www.eclipse.org/emf/2002/Ecore' as ecore

generate space "http://www.robotframework.org/text/Space"

Model: 
	RobotTable NL (=> Model)?;

RobotTable:
	SettingsTable | TestCaseTable | KeywordTable | VariablesTable;

SettingsTable:
	header=SettingsTableHeader
	(NL settings+=Setting)+;

SettingsTableHeader: '*'+ ' Settings ' '*'+;

TestCaseTable:
	header=TestCaseTableHeader
	(NL tests+=TestCase)+;

TestCaseTableHeader: '*'+ ' Test Cases ' '*'+;

KeywordTable:
	header=KeywordTableHeader
	(NL keywords+=Keyword)+;

KeywordTableHeader:	'*'+ ' Keywords ' '*'+;

VariablesTable:
	header=VariablesTableHeader
	(NL variables+=Variable)+;

VariablesTableHeader: '*'+ ' Variables ' '*'+;

Setting:
	(ValuesSetting | StepSetting);

TestCase:
	name=MacroName
	(NL SEPARATOR settings+=TestCaseSetting)*
	(NL SEPARATOR steps+=RobotStep)+;

Keyword:
	name=MacroName
	(NL SEPARATOR settings+=KeywordSetting)*
	(NL SEPARATOR steps+=RobotStep)+;

Variable:
	ScalarVariable | ListVariable
;

ScalarVariable:
	name=ScalarName SEPARATOR  value=RobotText
;

ListVariable:
	name=ListName SEPARATOR value=Values
;

TestCaseSetting:
	SetupSetting | TeardownSetting | SomeTestSetting;

SomeTestSetting:
	name=('[Documentation]' |
	'[Timeout]' |
	'[Tags]' |
	'[Template]') 
	SEPARATOR value=Values;

KeywordSetting:
    setting=(ArgumentsSetting | TeardownSetting | SomeKeywordSetting);

ArgumentsSetting:
	name='[Arguments]'
	(SEPARATOR args+=ScalarName)*
	(SEPARATOR default_args+=ScalarName '=' defaults+=RobotText)*
	(SEPARATOR ListName)?;

TeardownSetting:
    name='[Teardown]' SEPARATOR step=ExecutingStep
;

SetupSetting:
    name='[Setup]' SEPARATOR step=ExecutingStep;

SomeKeywordSetting:
	name=('[Documentation]' |
	'[Timeout]' |
	'[Return]') 
	SEPARATOR 
	value=Values;

ValuesSetting:
	name=('Force Tags' |
	'Default Tags' |
	'Library' |
	'Resource' |
	'Test Template' |
	'Test Timeout' |
	'Documentation') 
	SEPARATOR 
	value=Values;

StepSetting:
	name=('Suite Setup' |
	'Suite Teardown' |
	'Test Setup' |
	'Test Teardown') 
	SEPARATOR 
	value=ExecutingStep;

RobotStep:
    ExecutingStep | AssigningStep	
;

ExecutingStep:
	keyword=[Keyword|MacroName] (SEPARATOR values+=CellValue)*;

AssigningStep:
	(vars+=[Variable|ScalarName] SEPARATOR)* 
	(vars+=[Variable|ScalarName] | vars+=[Variable|ListName]) '='? 
	SEPARATOR keyword=[Keyword|MacroName] 
	(SEPARATOR values+=CellValue)*
;

CellValue: {CellValue}
	f=RobotText | link=[ScalarVariable|ScalarName]
;

Values:
	val=RobotText (SEPARATOR others+=RobotText)*;

ScalarName:
	'${' RobotText '}'
;

ListName:
	'@{' RobotText '}'
;

RobotText: ('*' | TEXT) ((' ' | '*') TEXT)*;

MacroName: TEXT ((' ' | '*') TEXT)*;

terminal NL: ('\r'|'\n')+;

terminal TEXT: !('='|' '|'\r'|'\n'|'*'|'{'|'}'|'$'|'@')+;

terminal SEPARATOR: ' '' '+;

terminal COMMENT: ' '* '#' !('\r'|'\n')*;