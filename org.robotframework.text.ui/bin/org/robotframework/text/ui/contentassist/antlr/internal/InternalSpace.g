/*
* generated by Xtext
*/
grammar InternalSpace;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.robotframework.text.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.robotframework.text.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.robotframework.text.services.SpaceGrammarAccess;

}

@parser::members {
 
 	private SpaceGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SpaceGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRobotTable
entryRuleRobotTable 
:
{ before(grammarAccess.getRobotTableRule()); }
	 ruleRobotTable
{ after(grammarAccess.getRobotTableRule()); } 
	 EOF 
;

// Rule RobotTable
ruleRobotTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRobotTableAccess().getAlternatives()); }
(rule__RobotTable__Alternatives)
{ after(grammarAccess.getRobotTableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSettingsTable
entryRuleSettingsTable 
:
{ before(grammarAccess.getSettingsTableRule()); }
	 ruleSettingsTable
{ after(grammarAccess.getSettingsTableRule()); } 
	 EOF 
;

// Rule SettingsTable
ruleSettingsTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSettingsTableAccess().getGroup()); }
(rule__SettingsTable__Group__0)
{ after(grammarAccess.getSettingsTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSettingsTableHeader
entryRuleSettingsTableHeader 
:
{ before(grammarAccess.getSettingsTableHeaderRule()); }
	 ruleSettingsTableHeader
{ after(grammarAccess.getSettingsTableHeaderRule()); } 
	 EOF 
;

// Rule SettingsTableHeader
ruleSettingsTableHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSettingsTableHeaderAccess().getGroup()); }
(rule__SettingsTableHeader__Group__0)
{ after(grammarAccess.getSettingsTableHeaderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestCaseTable
entryRuleTestCaseTable 
:
{ before(grammarAccess.getTestCaseTableRule()); }
	 ruleTestCaseTable
{ after(grammarAccess.getTestCaseTableRule()); } 
	 EOF 
;

// Rule TestCaseTable
ruleTestCaseTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestCaseTableAccess().getGroup()); }
(rule__TestCaseTable__Group__0)
{ after(grammarAccess.getTestCaseTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestCaseTableHeader
entryRuleTestCaseTableHeader 
:
{ before(grammarAccess.getTestCaseTableHeaderRule()); }
	 ruleTestCaseTableHeader
{ after(grammarAccess.getTestCaseTableHeaderRule()); } 
	 EOF 
;

// Rule TestCaseTableHeader
ruleTestCaseTableHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestCaseTableHeaderAccess().getGroup()); }
(rule__TestCaseTableHeader__Group__0)
{ after(grammarAccess.getTestCaseTableHeaderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeywordTable
entryRuleKeywordTable 
:
{ before(grammarAccess.getKeywordTableRule()); }
	 ruleKeywordTable
{ after(grammarAccess.getKeywordTableRule()); } 
	 EOF 
;

// Rule KeywordTable
ruleKeywordTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordTableAccess().getGroup()); }
(rule__KeywordTable__Group__0)
{ after(grammarAccess.getKeywordTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeywordTableHeader
entryRuleKeywordTableHeader 
:
{ before(grammarAccess.getKeywordTableHeaderRule()); }
	 ruleKeywordTableHeader
{ after(grammarAccess.getKeywordTableHeaderRule()); } 
	 EOF 
;

// Rule KeywordTableHeader
ruleKeywordTableHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordTableHeaderAccess().getGroup()); }
(rule__KeywordTableHeader__Group__0)
{ after(grammarAccess.getKeywordTableHeaderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariablesTable
entryRuleVariablesTable 
:
{ before(grammarAccess.getVariablesTableRule()); }
	 ruleVariablesTable
{ after(grammarAccess.getVariablesTableRule()); } 
	 EOF 
;

// Rule VariablesTable
ruleVariablesTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariablesTableAccess().getGroup()); }
(rule__VariablesTable__Group__0)
{ after(grammarAccess.getVariablesTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariablesTableHeader
entryRuleVariablesTableHeader 
:
{ before(grammarAccess.getVariablesTableHeaderRule()); }
	 ruleVariablesTableHeader
{ after(grammarAccess.getVariablesTableHeaderRule()); } 
	 EOF 
;

// Rule VariablesTableHeader
ruleVariablesTableHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariablesTableHeaderAccess().getGroup()); }
(rule__VariablesTableHeader__Group__0)
{ after(grammarAccess.getVariablesTableHeaderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetting
entryRuleSetting 
:
{ before(grammarAccess.getSettingRule()); }
	 ruleSetting
{ after(grammarAccess.getSettingRule()); } 
	 EOF 
;

// Rule Setting
ruleSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSettingAccess().getAlternatives()); }
(rule__Setting__Alternatives)
{ after(grammarAccess.getSettingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestCase
entryRuleTestCase 
:
{ before(grammarAccess.getTestCaseRule()); }
	 ruleTestCase
{ after(grammarAccess.getTestCaseRule()); } 
	 EOF 
;

// Rule TestCase
ruleTestCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestCaseAccess().getGroup()); }
(rule__TestCase__Group__0)
{ after(grammarAccess.getTestCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyword
entryRuleKeyword 
:
{ before(grammarAccess.getKeywordRule()); }
	 ruleKeyword
{ after(grammarAccess.getKeywordRule()); } 
	 EOF 
;

// Rule Keyword
ruleKeyword
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordAccess().getGroup()); }
(rule__Keyword__Group__0)
{ after(grammarAccess.getKeywordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getAlternatives()); }
(rule__Variable__Alternatives)
{ after(grammarAccess.getVariableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScalarVariable
entryRuleScalarVariable 
:
{ before(grammarAccess.getScalarVariableRule()); }
	 ruleScalarVariable
{ after(grammarAccess.getScalarVariableRule()); } 
	 EOF 
;

// Rule ScalarVariable
ruleScalarVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScalarVariableAccess().getGroup()); }
(rule__ScalarVariable__Group__0)
{ after(grammarAccess.getScalarVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListVariable
entryRuleListVariable 
:
{ before(grammarAccess.getListVariableRule()); }
	 ruleListVariable
{ after(grammarAccess.getListVariableRule()); } 
	 EOF 
;

// Rule ListVariable
ruleListVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListVariableAccess().getGroup()); }
(rule__ListVariable__Group__0)
{ after(grammarAccess.getListVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestCaseSetting
entryRuleTestCaseSetting 
:
{ before(grammarAccess.getTestCaseSettingRule()); }
	 ruleTestCaseSetting
{ after(grammarAccess.getTestCaseSettingRule()); } 
	 EOF 
;

// Rule TestCaseSetting
ruleTestCaseSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestCaseSettingAccess().getAlternatives()); }
(rule__TestCaseSetting__Alternatives)
{ after(grammarAccess.getTestCaseSettingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSomeTestSetting
entryRuleSomeTestSetting 
:
{ before(grammarAccess.getSomeTestSettingRule()); }
	 ruleSomeTestSetting
{ after(grammarAccess.getSomeTestSettingRule()); } 
	 EOF 
;

// Rule SomeTestSetting
ruleSomeTestSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSomeTestSettingAccess().getGroup()); }
(rule__SomeTestSetting__Group__0)
{ after(grammarAccess.getSomeTestSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeywordSetting
entryRuleKeywordSetting 
:
{ before(grammarAccess.getKeywordSettingRule()); }
	 ruleKeywordSetting
{ after(grammarAccess.getKeywordSettingRule()); } 
	 EOF 
;

// Rule KeywordSetting
ruleKeywordSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordSettingAccess().getSettingAssignment()); }
(rule__KeywordSetting__SettingAssignment)
{ after(grammarAccess.getKeywordSettingAccess().getSettingAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgumentsSetting
entryRuleArgumentsSetting 
:
{ before(grammarAccess.getArgumentsSettingRule()); }
	 ruleArgumentsSetting
{ after(grammarAccess.getArgumentsSettingRule()); } 
	 EOF 
;

// Rule ArgumentsSetting
ruleArgumentsSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentsSettingAccess().getGroup()); }
(rule__ArgumentsSetting__Group__0)
{ after(grammarAccess.getArgumentsSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTeardownSetting
entryRuleTeardownSetting 
:
{ before(grammarAccess.getTeardownSettingRule()); }
	 ruleTeardownSetting
{ after(grammarAccess.getTeardownSettingRule()); } 
	 EOF 
;

// Rule TeardownSetting
ruleTeardownSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTeardownSettingAccess().getGroup()); }
(rule__TeardownSetting__Group__0)
{ after(grammarAccess.getTeardownSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetupSetting
entryRuleSetupSetting 
:
{ before(grammarAccess.getSetupSettingRule()); }
	 ruleSetupSetting
{ after(grammarAccess.getSetupSettingRule()); } 
	 EOF 
;

// Rule SetupSetting
ruleSetupSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetupSettingAccess().getGroup()); }
(rule__SetupSetting__Group__0)
{ after(grammarAccess.getSetupSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSomeKeywordSetting
entryRuleSomeKeywordSetting 
:
{ before(grammarAccess.getSomeKeywordSettingRule()); }
	 ruleSomeKeywordSetting
{ after(grammarAccess.getSomeKeywordSettingRule()); } 
	 EOF 
;

// Rule SomeKeywordSetting
ruleSomeKeywordSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSomeKeywordSettingAccess().getGroup()); }
(rule__SomeKeywordSetting__Group__0)
{ after(grammarAccess.getSomeKeywordSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuesSetting
entryRuleValuesSetting 
:
{ before(grammarAccess.getValuesSettingRule()); }
	 ruleValuesSetting
{ after(grammarAccess.getValuesSettingRule()); } 
	 EOF 
;

// Rule ValuesSetting
ruleValuesSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuesSettingAccess().getGroup()); }
(rule__ValuesSetting__Group__0)
{ after(grammarAccess.getValuesSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStepSetting
entryRuleStepSetting 
:
{ before(grammarAccess.getStepSettingRule()); }
	 ruleStepSetting
{ after(grammarAccess.getStepSettingRule()); } 
	 EOF 
;

// Rule StepSetting
ruleStepSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStepSettingAccess().getGroup()); }
(rule__StepSetting__Group__0)
{ after(grammarAccess.getStepSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRobotStep
entryRuleRobotStep 
:
{ before(grammarAccess.getRobotStepRule()); }
	 ruleRobotStep
{ after(grammarAccess.getRobotStepRule()); } 
	 EOF 
;

// Rule RobotStep
ruleRobotStep
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRobotStepAccess().getAlternatives()); }
(rule__RobotStep__Alternatives)
{ after(grammarAccess.getRobotStepAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExecutingStep
entryRuleExecutingStep 
:
{ before(grammarAccess.getExecutingStepRule()); }
	 ruleExecutingStep
{ after(grammarAccess.getExecutingStepRule()); } 
	 EOF 
;

// Rule ExecutingStep
ruleExecutingStep
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecutingStepAccess().getGroup()); }
(rule__ExecutingStep__Group__0)
{ after(grammarAccess.getExecutingStepAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssigningStep
entryRuleAssigningStep 
:
{ before(grammarAccess.getAssigningStepRule()); }
	 ruleAssigningStep
{ after(grammarAccess.getAssigningStepRule()); } 
	 EOF 
;

// Rule AssigningStep
ruleAssigningStep
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssigningStepAccess().getGroup()); }
(rule__AssigningStep__Group__0)
{ after(grammarAccess.getAssigningStepAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCellValue
entryRuleCellValue 
:
{ before(grammarAccess.getCellValueRule()); }
	 ruleCellValue
{ after(grammarAccess.getCellValueRule()); } 
	 EOF 
;

// Rule CellValue
ruleCellValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCellValueAccess().getAlternatives()); }
(rule__CellValue__Alternatives)
{ after(grammarAccess.getCellValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValues
entryRuleValues 
:
{ before(grammarAccess.getValuesRule()); }
	 ruleValues
{ after(grammarAccess.getValuesRule()); } 
	 EOF 
;

// Rule Values
ruleValues
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuesAccess().getGroup()); }
(rule__Values__Group__0)
{ after(grammarAccess.getValuesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScalarName
entryRuleScalarName 
:
{ before(grammarAccess.getScalarNameRule()); }
	 ruleScalarName
{ after(grammarAccess.getScalarNameRule()); } 
	 EOF 
;

// Rule ScalarName
ruleScalarName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScalarNameAccess().getGroup()); }
(rule__ScalarName__Group__0)
{ after(grammarAccess.getScalarNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListName
entryRuleListName 
:
{ before(grammarAccess.getListNameRule()); }
	 ruleListName
{ after(grammarAccess.getListNameRule()); } 
	 EOF 
;

// Rule ListName
ruleListName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListNameAccess().getGroup()); }
(rule__ListName__Group__0)
{ after(grammarAccess.getListNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRobotText
entryRuleRobotText 
:
{ before(grammarAccess.getRobotTextRule()); }
	 ruleRobotText
{ after(grammarAccess.getRobotTextRule()); } 
	 EOF 
;

// Rule RobotText
ruleRobotText
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRobotTextAccess().getGroup()); }
(rule__RobotText__Group__0)
{ after(grammarAccess.getRobotTextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMacroName
entryRuleMacroName 
:
{ before(grammarAccess.getMacroNameRule()); }
	 ruleMacroName
{ after(grammarAccess.getMacroNameRule()); } 
	 EOF 
;

// Rule MacroName
ruleMacroName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroNameAccess().getGroup()); }
(rule__MacroName__Group__0)
{ after(grammarAccess.getMacroNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__RobotTable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTableAccess().getSettingsTableParserRuleCall_0()); }
	ruleSettingsTable
{ after(grammarAccess.getRobotTableAccess().getSettingsTableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRobotTableAccess().getTestCaseTableParserRuleCall_1()); }
	ruleTestCaseTable
{ after(grammarAccess.getRobotTableAccess().getTestCaseTableParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRobotTableAccess().getKeywordTableParserRuleCall_2()); }
	ruleKeywordTable
{ after(grammarAccess.getRobotTableAccess().getKeywordTableParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRobotTableAccess().getVariablesTableParserRuleCall_3()); }
	ruleVariablesTable
{ after(grammarAccess.getRobotTableAccess().getVariablesTableParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingAccess().getValuesSettingParserRuleCall_0()); }
	ruleValuesSetting
{ after(grammarAccess.getSettingAccess().getValuesSettingParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSettingAccess().getStepSettingParserRuleCall_1()); }
	ruleStepSetting
{ after(grammarAccess.getSettingAccess().getStepSettingParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getScalarVariableParserRuleCall_0()); }
	ruleScalarVariable
{ after(grammarAccess.getVariableAccess().getScalarVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getListVariableParserRuleCall_1()); }
	ruleListVariable
{ after(grammarAccess.getVariableAccess().getListVariableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseSetting__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseSettingAccess().getSetupSettingParserRuleCall_0()); }
	ruleSetupSetting
{ after(grammarAccess.getTestCaseSettingAccess().getSetupSettingParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTestCaseSettingAccess().getTeardownSettingParserRuleCall_1()); }
	ruleTeardownSetting
{ after(grammarAccess.getTestCaseSettingAccess().getTeardownSettingParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTestCaseSettingAccess().getSomeTestSettingParserRuleCall_2()); }
	ruleSomeTestSetting
{ after(grammarAccess.getTestCaseSettingAccess().getSomeTestSettingParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeTestSetting__NameAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeTestSettingAccess().getNameDocumentationKeyword_0_0_0()); }

	'[Documentation]' 

{ after(grammarAccess.getSomeTestSettingAccess().getNameDocumentationKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getSomeTestSettingAccess().getNameTimeoutKeyword_0_0_1()); }

	'[Timeout]' 

{ after(grammarAccess.getSomeTestSettingAccess().getNameTimeoutKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getSomeTestSettingAccess().getNameTagsKeyword_0_0_2()); }

	'[Tags]' 

{ after(grammarAccess.getSomeTestSettingAccess().getNameTagsKeyword_0_0_2()); }
)

    |(
{ before(grammarAccess.getSomeTestSettingAccess().getNameTemplateKeyword_0_0_3()); }

	'[Template]' 

{ after(grammarAccess.getSomeTestSettingAccess().getNameTemplateKeyword_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordSetting__SettingAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordSettingAccess().getSettingArgumentsSettingParserRuleCall_0_0()); }
	ruleArgumentsSetting
{ after(grammarAccess.getKeywordSettingAccess().getSettingArgumentsSettingParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getKeywordSettingAccess().getSettingTeardownSettingParserRuleCall_0_1()); }
	ruleTeardownSetting
{ after(grammarAccess.getKeywordSettingAccess().getSettingTeardownSettingParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getKeywordSettingAccess().getSettingSomeKeywordSettingParserRuleCall_0_2()); }
	ruleSomeKeywordSetting
{ after(grammarAccess.getKeywordSettingAccess().getSettingSomeKeywordSettingParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeKeywordSetting__NameAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeKeywordSettingAccess().getNameDocumentationKeyword_0_0_0()); }

	'[Documentation]' 

{ after(grammarAccess.getSomeKeywordSettingAccess().getNameDocumentationKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getSomeKeywordSettingAccess().getNameTimeoutKeyword_0_0_1()); }

	'[Timeout]' 

{ after(grammarAccess.getSomeKeywordSettingAccess().getNameTimeoutKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getSomeKeywordSettingAccess().getNameReturnKeyword_0_0_2()); }

	'[Return]' 

{ after(grammarAccess.getSomeKeywordSettingAccess().getNameReturnKeyword_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesSetting__NameAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesSettingAccess().getNameForceTagsKeyword_0_0_0()); }

	'Force Tags' 

{ after(grammarAccess.getValuesSettingAccess().getNameForceTagsKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getValuesSettingAccess().getNameDefaultTagsKeyword_0_0_1()); }

	'Default Tags' 

{ after(grammarAccess.getValuesSettingAccess().getNameDefaultTagsKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getValuesSettingAccess().getNameLibraryKeyword_0_0_2()); }

	'Library' 

{ after(grammarAccess.getValuesSettingAccess().getNameLibraryKeyword_0_0_2()); }
)

    |(
{ before(grammarAccess.getValuesSettingAccess().getNameResourceKeyword_0_0_3()); }

	'Resource' 

{ after(grammarAccess.getValuesSettingAccess().getNameResourceKeyword_0_0_3()); }
)

    |(
{ before(grammarAccess.getValuesSettingAccess().getNameTestTemplateKeyword_0_0_4()); }

	'Test Template' 

{ after(grammarAccess.getValuesSettingAccess().getNameTestTemplateKeyword_0_0_4()); }
)

    |(
{ before(grammarAccess.getValuesSettingAccess().getNameTestTimeoutKeyword_0_0_5()); }

	'Test Timeout' 

{ after(grammarAccess.getValuesSettingAccess().getNameTestTimeoutKeyword_0_0_5()); }
)

    |(
{ before(grammarAccess.getValuesSettingAccess().getNameDocumentationKeyword_0_0_6()); }

	'Documentation' 

{ after(grammarAccess.getValuesSettingAccess().getNameDocumentationKeyword_0_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StepSetting__NameAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepSettingAccess().getNameSuiteSetupKeyword_0_0_0()); }

	'Suite Setup' 

{ after(grammarAccess.getStepSettingAccess().getNameSuiteSetupKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getStepSettingAccess().getNameSuiteTeardownKeyword_0_0_1()); }

	'Suite Teardown' 

{ after(grammarAccess.getStepSettingAccess().getNameSuiteTeardownKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getStepSettingAccess().getNameTestSetupKeyword_0_0_2()); }

	'Test Setup' 

{ after(grammarAccess.getStepSettingAccess().getNameTestSetupKeyword_0_0_2()); }
)

    |(
{ before(grammarAccess.getStepSettingAccess().getNameTestTeardownKeyword_0_0_3()); }

	'Test Teardown' 

{ after(grammarAccess.getStepSettingAccess().getNameTestTeardownKeyword_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RobotStep__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotStepAccess().getExecutingStepParserRuleCall_0()); }
	ruleExecutingStep
{ after(grammarAccess.getRobotStepAccess().getExecutingStepParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRobotStepAccess().getAssigningStepParserRuleCall_1()); }
	ruleAssigningStep
{ after(grammarAccess.getRobotStepAccess().getAssigningStepParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getVarsAssignment_1_0()); }
(rule__AssigningStep__VarsAssignment_1_0)
{ after(grammarAccess.getAssigningStepAccess().getVarsAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getAssigningStepAccess().getVarsAssignment_1_1()); }
(rule__AssigningStep__VarsAssignment_1_1)
{ after(grammarAccess.getAssigningStepAccess().getVarsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellValueAccess().getGroup_0()); }
(rule__CellValue__Group_0__0)
{ after(grammarAccess.getCellValueAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCellValueAccess().getLinkAssignment_1()); }
(rule__CellValue__LinkAssignment_1)
{ after(grammarAccess.getCellValueAccess().getLinkAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RobotText__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTextAccess().getAsteriskKeyword_0_0()); }

	'*' 

{ after(grammarAccess.getRobotTextAccess().getAsteriskKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getRobotTextAccess().getTEXTTerminalRuleCall_0_1()); }
	RULE_TEXT
{ after(grammarAccess.getRobotTextAccess().getTEXTTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RobotText__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTextAccess().getSpaceKeyword_1_0_0()); }

	' ' 

{ after(grammarAccess.getRobotTextAccess().getSpaceKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getRobotTextAccess().getAsteriskKeyword_1_0_1()); }

	'*' 

{ after(grammarAccess.getRobotTextAccess().getAsteriskKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MacroName__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroNameAccess().getSpaceKeyword_1_0_0()); }

	' ' 

{ after(grammarAccess.getMacroNameAccess().getSpaceKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getMacroNameAccess().getAsteriskKeyword_1_0_1()); }

	'*' 

{ after(grammarAccess.getMacroNameAccess().getAsteriskKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRobotTableParserRuleCall_0()); }
	ruleRobotTable
{ after(grammarAccess.getModelAccess().getRobotTableParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNLTerminalRuleCall_1()); }
	RULE_NL
{ after(grammarAccess.getModelAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelParserRuleCall_2()); }
(	ruleModel)?
{ after(grammarAccess.getModelAccess().getModelParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SettingsTable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettingsTable__Group__0__Impl
	rule__SettingsTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SettingsTable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingsTableAccess().getHeaderAssignment_0()); }
(rule__SettingsTable__HeaderAssignment_0)
{ after(grammarAccess.getSettingsTableAccess().getHeaderAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SettingsTable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettingsTable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SettingsTable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSettingsTableAccess().getGroup_1()); }
(rule__SettingsTable__Group_1__0)
{ after(grammarAccess.getSettingsTableAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getSettingsTableAccess().getGroup_1()); }
(rule__SettingsTable__Group_1__0)*
{ after(grammarAccess.getSettingsTableAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SettingsTable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettingsTable__Group_1__0__Impl
	rule__SettingsTable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SettingsTable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingsTableAccess().getNLTerminalRuleCall_1_0()); }
	RULE_NL
{ after(grammarAccess.getSettingsTableAccess().getNLTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SettingsTable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettingsTable__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SettingsTable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingsTableAccess().getSettingsAssignment_1_1()); }
(rule__SettingsTable__SettingsAssignment_1_1)
{ after(grammarAccess.getSettingsTableAccess().getSettingsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SettingsTableHeader__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettingsTableHeader__Group__0__Impl
	rule__SettingsTableHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SettingsTableHeader__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSettingsTableHeaderAccess().getAsteriskKeyword_0()); }
(
	'*' 
)
{ after(grammarAccess.getSettingsTableHeaderAccess().getAsteriskKeyword_0()); }
)
(
{ before(grammarAccess.getSettingsTableHeaderAccess().getAsteriskKeyword_0()); }
(
	'*' 
)*
{ after(grammarAccess.getSettingsTableHeaderAccess().getAsteriskKeyword_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SettingsTableHeader__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettingsTableHeader__Group__1__Impl
	rule__SettingsTableHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SettingsTableHeader__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingsTableHeaderAccess().getSettingsKeyword_1()); }

	' Settings ' 

{ after(grammarAccess.getSettingsTableHeaderAccess().getSettingsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SettingsTableHeader__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettingsTableHeader__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SettingsTableHeader__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSettingsTableHeaderAccess().getAsteriskKeyword_2()); }
(
	'*' 
)
{ after(grammarAccess.getSettingsTableHeaderAccess().getAsteriskKeyword_2()); }
)
(
{ before(grammarAccess.getSettingsTableHeaderAccess().getAsteriskKeyword_2()); }
(
	'*' 
)*
{ after(grammarAccess.getSettingsTableHeaderAccess().getAsteriskKeyword_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TestCaseTable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseTable__Group__0__Impl
	rule__TestCaseTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseTableAccess().getHeaderAssignment_0()); }
(rule__TestCaseTable__HeaderAssignment_0)
{ after(grammarAccess.getTestCaseTableAccess().getHeaderAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCaseTable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseTable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTestCaseTableAccess().getGroup_1()); }
(rule__TestCaseTable__Group_1__0)
{ after(grammarAccess.getTestCaseTableAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getTestCaseTableAccess().getGroup_1()); }
(rule__TestCaseTable__Group_1__0)*
{ after(grammarAccess.getTestCaseTableAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TestCaseTable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseTable__Group_1__0__Impl
	rule__TestCaseTable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseTableAccess().getNLTerminalRuleCall_1_0()); }
	RULE_NL
{ after(grammarAccess.getTestCaseTableAccess().getNLTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCaseTable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseTable__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseTableAccess().getTestsAssignment_1_1()); }
(rule__TestCaseTable__TestsAssignment_1_1)
{ after(grammarAccess.getTestCaseTableAccess().getTestsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TestCaseTableHeader__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseTableHeader__Group__0__Impl
	rule__TestCaseTableHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTableHeader__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTestCaseTableHeaderAccess().getAsteriskKeyword_0()); }
(
	'*' 
)
{ after(grammarAccess.getTestCaseTableHeaderAccess().getAsteriskKeyword_0()); }
)
(
{ before(grammarAccess.getTestCaseTableHeaderAccess().getAsteriskKeyword_0()); }
(
	'*' 
)*
{ after(grammarAccess.getTestCaseTableHeaderAccess().getAsteriskKeyword_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCaseTableHeader__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseTableHeader__Group__1__Impl
	rule__TestCaseTableHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTableHeader__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseTableHeaderAccess().getTestCasesKeyword_1()); }

	' Test Cases ' 

{ after(grammarAccess.getTestCaseTableHeaderAccess().getTestCasesKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCaseTableHeader__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseTableHeader__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTableHeader__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTestCaseTableHeaderAccess().getAsteriskKeyword_2()); }
(
	'*' 
)
{ after(grammarAccess.getTestCaseTableHeaderAccess().getAsteriskKeyword_2()); }
)
(
{ before(grammarAccess.getTestCaseTableHeaderAccess().getAsteriskKeyword_2()); }
(
	'*' 
)*
{ after(grammarAccess.getTestCaseTableHeaderAccess().getAsteriskKeyword_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeywordTable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordTable__Group__0__Impl
	rule__KeywordTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordTableAccess().getHeaderAssignment_0()); }
(rule__KeywordTable__HeaderAssignment_0)
{ after(grammarAccess.getKeywordTableAccess().getHeaderAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordTable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordTable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getKeywordTableAccess().getGroup_1()); }
(rule__KeywordTable__Group_1__0)
{ after(grammarAccess.getKeywordTableAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getKeywordTableAccess().getGroup_1()); }
(rule__KeywordTable__Group_1__0)*
{ after(grammarAccess.getKeywordTableAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__KeywordTable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordTable__Group_1__0__Impl
	rule__KeywordTable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordTableAccess().getNLTerminalRuleCall_1_0()); }
	RULE_NL
{ after(grammarAccess.getKeywordTableAccess().getNLTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordTable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordTable__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordTableAccess().getKeywordsAssignment_1_1()); }
(rule__KeywordTable__KeywordsAssignment_1_1)
{ after(grammarAccess.getKeywordTableAccess().getKeywordsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__KeywordTableHeader__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordTableHeader__Group__0__Impl
	rule__KeywordTableHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTableHeader__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getKeywordTableHeaderAccess().getAsteriskKeyword_0()); }
(
	'*' 
)
{ after(grammarAccess.getKeywordTableHeaderAccess().getAsteriskKeyword_0()); }
)
(
{ before(grammarAccess.getKeywordTableHeaderAccess().getAsteriskKeyword_0()); }
(
	'*' 
)*
{ after(grammarAccess.getKeywordTableHeaderAccess().getAsteriskKeyword_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordTableHeader__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordTableHeader__Group__1__Impl
	rule__KeywordTableHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTableHeader__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordTableHeaderAccess().getKeywordsKeyword_1()); }

	' Keywords ' 

{ after(grammarAccess.getKeywordTableHeaderAccess().getKeywordsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordTableHeader__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordTableHeader__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTableHeader__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getKeywordTableHeaderAccess().getAsteriskKeyword_2()); }
(
	'*' 
)
{ after(grammarAccess.getKeywordTableHeaderAccess().getAsteriskKeyword_2()); }
)
(
{ before(grammarAccess.getKeywordTableHeaderAccess().getAsteriskKeyword_2()); }
(
	'*' 
)*
{ after(grammarAccess.getKeywordTableHeaderAccess().getAsteriskKeyword_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariablesTable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesTable__Group__0__Impl
	rule__VariablesTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesTableAccess().getHeaderAssignment_0()); }
(rule__VariablesTable__HeaderAssignment_0)
{ after(grammarAccess.getVariablesTableAccess().getHeaderAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariablesTable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesTable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVariablesTableAccess().getGroup_1()); }
(rule__VariablesTable__Group_1__0)
{ after(grammarAccess.getVariablesTableAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getVariablesTableAccess().getGroup_1()); }
(rule__VariablesTable__Group_1__0)*
{ after(grammarAccess.getVariablesTableAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariablesTable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesTable__Group_1__0__Impl
	rule__VariablesTable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesTableAccess().getNLTerminalRuleCall_1_0()); }
	RULE_NL
{ after(grammarAccess.getVariablesTableAccess().getNLTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariablesTable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesTable__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesTableAccess().getVariablesAssignment_1_1()); }
(rule__VariablesTable__VariablesAssignment_1_1)
{ after(grammarAccess.getVariablesTableAccess().getVariablesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariablesTableHeader__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesTableHeader__Group__0__Impl
	rule__VariablesTableHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTableHeader__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVariablesTableHeaderAccess().getAsteriskKeyword_0()); }
(
	'*' 
)
{ after(grammarAccess.getVariablesTableHeaderAccess().getAsteriskKeyword_0()); }
)
(
{ before(grammarAccess.getVariablesTableHeaderAccess().getAsteriskKeyword_0()); }
(
	'*' 
)*
{ after(grammarAccess.getVariablesTableHeaderAccess().getAsteriskKeyword_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariablesTableHeader__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesTableHeader__Group__1__Impl
	rule__VariablesTableHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTableHeader__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesTableHeaderAccess().getVariablesKeyword_1()); }

	' Variables ' 

{ after(grammarAccess.getVariablesTableHeaderAccess().getVariablesKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariablesTableHeader__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesTableHeader__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTableHeader__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVariablesTableHeaderAccess().getAsteriskKeyword_2()); }
(
	'*' 
)
{ after(grammarAccess.getVariablesTableHeaderAccess().getAsteriskKeyword_2()); }
)
(
{ before(grammarAccess.getVariablesTableHeaderAccess().getAsteriskKeyword_2()); }
(
	'*' 
)*
{ after(grammarAccess.getVariablesTableHeaderAccess().getAsteriskKeyword_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TestCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__0__Impl
	rule__TestCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getNameAssignment_0()); }
(rule__TestCase__NameAssignment_0)
{ after(grammarAccess.getTestCaseAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__1__Impl
	rule__TestCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getGroup_1()); }
(rule__TestCase__Group_1__0)*
{ after(grammarAccess.getTestCaseAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTestCaseAccess().getGroup_2()); }
(rule__TestCase__Group_2__0)
{ after(grammarAccess.getTestCaseAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getTestCaseAccess().getGroup_2()); }
(rule__TestCase__Group_2__0)*
{ after(grammarAccess.getTestCaseAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TestCase__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group_1__0__Impl
	rule__TestCase__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getNLTerminalRuleCall_1_0()); }
	RULE_NL
{ after(grammarAccess.getTestCaseAccess().getNLTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group_1__1__Impl
	rule__TestCase__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getSEPARATORTerminalRuleCall_1_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getTestCaseAccess().getSEPARATORTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getSettingsAssignment_1_2()); }
(rule__TestCase__SettingsAssignment_1_2)
{ after(grammarAccess.getTestCaseAccess().getSettingsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TestCase__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group_2__0__Impl
	rule__TestCase__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getNLTerminalRuleCall_2_0()); }
	RULE_NL
{ after(grammarAccess.getTestCaseAccess().getNLTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group_2__1__Impl
	rule__TestCase__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getSEPARATORTerminalRuleCall_2_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getTestCaseAccess().getSEPARATORTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getStepsAssignment_2_2()); }
(rule__TestCase__StepsAssignment_2_2)
{ after(grammarAccess.getTestCaseAccess().getStepsAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Keyword__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group__0__Impl
	rule__Keyword__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNameAssignment_0()); }
(rule__Keyword__NameAssignment_0)
{ after(grammarAccess.getKeywordAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyword__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group__1__Impl
	rule__Keyword__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getGroup_1()); }
(rule__Keyword__Group_1__0)*
{ after(grammarAccess.getKeywordAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyword__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getKeywordAccess().getGroup_2()); }
(rule__Keyword__Group_2__0)
{ after(grammarAccess.getKeywordAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getKeywordAccess().getGroup_2()); }
(rule__Keyword__Group_2__0)*
{ after(grammarAccess.getKeywordAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Keyword__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group_1__0__Impl
	rule__Keyword__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNLTerminalRuleCall_1_0()); }
	RULE_NL
{ after(grammarAccess.getKeywordAccess().getNLTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyword__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group_1__1__Impl
	rule__Keyword__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getSEPARATORTerminalRuleCall_1_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getKeywordAccess().getSEPARATORTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyword__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getSettingsAssignment_1_2()); }
(rule__Keyword__SettingsAssignment_1_2)
{ after(grammarAccess.getKeywordAccess().getSettingsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Keyword__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group_2__0__Impl
	rule__Keyword__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNLTerminalRuleCall_2_0()); }
	RULE_NL
{ after(grammarAccess.getKeywordAccess().getNLTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyword__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group_2__1__Impl
	rule__Keyword__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getSEPARATORTerminalRuleCall_2_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getKeywordAccess().getSEPARATORTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyword__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getStepsAssignment_2_2()); }
(rule__Keyword__StepsAssignment_2_2)
{ after(grammarAccess.getKeywordAccess().getStepsAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ScalarVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarVariable__Group__0__Impl
	rule__ScalarVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarVariableAccess().getNameAssignment_0()); }
(rule__ScalarVariable__NameAssignment_0)
{ after(grammarAccess.getScalarVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarVariable__Group__1__Impl
	rule__ScalarVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarVariableAccess().getSEPARATORTerminalRuleCall_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getScalarVariableAccess().getSEPARATORTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarVariableAccess().getValueAssignment_2()); }
(rule__ScalarVariable__ValueAssignment_2)
{ after(grammarAccess.getScalarVariableAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ListVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListVariable__Group__0__Impl
	rule__ListVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListVariableAccess().getNameAssignment_0()); }
(rule__ListVariable__NameAssignment_0)
{ after(grammarAccess.getListVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListVariable__Group__1__Impl
	rule__ListVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListVariableAccess().getSEPARATORTerminalRuleCall_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getListVariableAccess().getSEPARATORTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListVariableAccess().getValueAssignment_2()); }
(rule__ListVariable__ValueAssignment_2)
{ after(grammarAccess.getListVariableAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SomeTestSetting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeTestSetting__Group__0__Impl
	rule__SomeTestSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeTestSetting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeTestSettingAccess().getNameAssignment_0()); }
(rule__SomeTestSetting__NameAssignment_0)
{ after(grammarAccess.getSomeTestSettingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeTestSetting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeTestSetting__Group__1__Impl
	rule__SomeTestSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeTestSetting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeTestSettingAccess().getSEPARATORTerminalRuleCall_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getSomeTestSettingAccess().getSEPARATORTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeTestSetting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeTestSetting__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeTestSetting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeTestSettingAccess().getValueAssignment_2()); }
(rule__SomeTestSetting__ValueAssignment_2)
{ after(grammarAccess.getSomeTestSettingAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArgumentsSetting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsSetting__Group__0__Impl
	rule__ArgumentsSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getNameAssignment_0()); }
(rule__ArgumentsSetting__NameAssignment_0)
{ after(grammarAccess.getArgumentsSettingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentsSetting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsSetting__Group__1__Impl
	rule__ArgumentsSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getGroup_1()); }
(rule__ArgumentsSetting__Group_1__0)*
{ after(grammarAccess.getArgumentsSettingAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentsSetting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsSetting__Group__2__Impl
	rule__ArgumentsSetting__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getGroup_2()); }
(rule__ArgumentsSetting__Group_2__0)*
{ after(grammarAccess.getArgumentsSettingAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentsSetting__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsSetting__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getGroup_3()); }
(rule__ArgumentsSetting__Group_3__0)?
{ after(grammarAccess.getArgumentsSettingAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArgumentsSetting__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsSetting__Group_1__0__Impl
	rule__ArgumentsSetting__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_1_0()); }
	RULE_SEPARATOR
{ after(grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentsSetting__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsSetting__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getArgsAssignment_1_1()); }
(rule__ArgumentsSetting__ArgsAssignment_1_1)
{ after(grammarAccess.getArgumentsSettingAccess().getArgsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgumentsSetting__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsSetting__Group_2__0__Impl
	rule__ArgumentsSetting__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_2_0()); }
	RULE_SEPARATOR
{ after(grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentsSetting__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsSetting__Group_2__1__Impl
	rule__ArgumentsSetting__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getDefault_argsAssignment_2_1()); }
(rule__ArgumentsSetting__Default_argsAssignment_2_1)
{ after(grammarAccess.getArgumentsSettingAccess().getDefault_argsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentsSetting__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsSetting__Group_2__2__Impl
	rule__ArgumentsSetting__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getEqualsSignKeyword_2_2()); }

	'=' 

{ after(grammarAccess.getArgumentsSettingAccess().getEqualsSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentsSetting__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsSetting__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getDefaultsAssignment_2_3()); }
(rule__ArgumentsSetting__DefaultsAssignment_2_3)
{ after(grammarAccess.getArgumentsSettingAccess().getDefaultsAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArgumentsSetting__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsSetting__Group_3__0__Impl
	rule__ArgumentsSetting__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_3_0()); }
	RULE_SEPARATOR
{ after(grammarAccess.getArgumentsSettingAccess().getSEPARATORTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentsSetting__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentsSetting__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getListNameParserRuleCall_3_1()); }
	ruleListName
{ after(grammarAccess.getArgumentsSettingAccess().getListNameParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TeardownSetting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TeardownSetting__Group__0__Impl
	rule__TeardownSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TeardownSetting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTeardownSettingAccess().getNameAssignment_0()); }
(rule__TeardownSetting__NameAssignment_0)
{ after(grammarAccess.getTeardownSettingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TeardownSetting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TeardownSetting__Group__1__Impl
	rule__TeardownSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TeardownSetting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTeardownSettingAccess().getSEPARATORTerminalRuleCall_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getTeardownSettingAccess().getSEPARATORTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TeardownSetting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TeardownSetting__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TeardownSetting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTeardownSettingAccess().getStepAssignment_2()); }
(rule__TeardownSetting__StepAssignment_2)
{ after(grammarAccess.getTeardownSettingAccess().getStepAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SetupSetting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetupSetting__Group__0__Impl
	rule__SetupSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetupSetting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetupSettingAccess().getNameAssignment_0()); }
(rule__SetupSetting__NameAssignment_0)
{ after(grammarAccess.getSetupSettingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetupSetting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetupSetting__Group__1__Impl
	rule__SetupSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetupSetting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetupSettingAccess().getSEPARATORTerminalRuleCall_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getSetupSettingAccess().getSEPARATORTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SetupSetting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SetupSetting__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetupSetting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetupSettingAccess().getStepAssignment_2()); }
(rule__SetupSetting__StepAssignment_2)
{ after(grammarAccess.getSetupSettingAccess().getStepAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SomeKeywordSetting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeKeywordSetting__Group__0__Impl
	rule__SomeKeywordSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeKeywordSetting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeKeywordSettingAccess().getNameAssignment_0()); }
(rule__SomeKeywordSetting__NameAssignment_0)
{ after(grammarAccess.getSomeKeywordSettingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeKeywordSetting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeKeywordSetting__Group__1__Impl
	rule__SomeKeywordSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeKeywordSetting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeKeywordSettingAccess().getSEPARATORTerminalRuleCall_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getSomeKeywordSettingAccess().getSEPARATORTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SomeKeywordSetting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SomeKeywordSetting__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SomeKeywordSetting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeKeywordSettingAccess().getValueAssignment_2()); }
(rule__SomeKeywordSetting__ValueAssignment_2)
{ after(grammarAccess.getSomeKeywordSettingAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValuesSetting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuesSetting__Group__0__Impl
	rule__ValuesSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesSetting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesSettingAccess().getNameAssignment_0()); }
(rule__ValuesSetting__NameAssignment_0)
{ after(grammarAccess.getValuesSettingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuesSetting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuesSetting__Group__1__Impl
	rule__ValuesSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesSetting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesSettingAccess().getSEPARATORTerminalRuleCall_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getValuesSettingAccess().getSEPARATORTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuesSetting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuesSetting__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesSetting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesSettingAccess().getValueAssignment_2()); }
(rule__ValuesSetting__ValueAssignment_2)
{ after(grammarAccess.getValuesSettingAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StepSetting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepSetting__Group__0__Impl
	rule__StepSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepSetting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepSettingAccess().getNameAssignment_0()); }
(rule__StepSetting__NameAssignment_0)
{ after(grammarAccess.getStepSettingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StepSetting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepSetting__Group__1__Impl
	rule__StepSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StepSetting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepSettingAccess().getSEPARATORTerminalRuleCall_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getStepSettingAccess().getSEPARATORTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StepSetting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepSetting__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepSetting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepSettingAccess().getValueAssignment_2()); }
(rule__StepSetting__ValueAssignment_2)
{ after(grammarAccess.getStepSettingAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExecutingStep__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecutingStep__Group__0__Impl
	rule__ExecutingStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutingStep__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutingStepAccess().getKeywordAssignment_0()); }
(rule__ExecutingStep__KeywordAssignment_0)
{ after(grammarAccess.getExecutingStepAccess().getKeywordAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutingStep__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecutingStep__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutingStep__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutingStepAccess().getGroup_1()); }
(rule__ExecutingStep__Group_1__0)*
{ after(grammarAccess.getExecutingStepAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecutingStep__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecutingStep__Group_1__0__Impl
	rule__ExecutingStep__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutingStep__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutingStepAccess().getSEPARATORTerminalRuleCall_1_0()); }
	RULE_SEPARATOR
{ after(grammarAccess.getExecutingStepAccess().getSEPARATORTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutingStep__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecutingStep__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutingStep__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutingStepAccess().getValuesAssignment_1_1()); }
(rule__ExecutingStep__ValuesAssignment_1_1)
{ after(grammarAccess.getExecutingStepAccess().getValuesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssigningStep__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssigningStep__Group__0__Impl
	rule__AssigningStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getGroup_0()); }
(rule__AssigningStep__Group_0__0)*
{ after(grammarAccess.getAssigningStepAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssigningStep__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssigningStep__Group__1__Impl
	rule__AssigningStep__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getAlternatives_1()); }
(rule__AssigningStep__Alternatives_1)
{ after(grammarAccess.getAssigningStepAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssigningStep__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssigningStep__Group__2__Impl
	rule__AssigningStep__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getEqualsSignKeyword_2()); }
(
	'=' 
)?
{ after(grammarAccess.getAssigningStepAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssigningStep__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssigningStep__Group__3__Impl
	rule__AssigningStep__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getSEPARATORTerminalRuleCall_3()); }
	RULE_SEPARATOR
{ after(grammarAccess.getAssigningStepAccess().getSEPARATORTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssigningStep__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssigningStep__Group__4__Impl
	rule__AssigningStep__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getKeywordAssignment_4()); }
(rule__AssigningStep__KeywordAssignment_4)
{ after(grammarAccess.getAssigningStepAccess().getKeywordAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssigningStep__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssigningStep__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getGroup_5()); }
(rule__AssigningStep__Group_5__0)*
{ after(grammarAccess.getAssigningStepAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AssigningStep__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssigningStep__Group_0__0__Impl
	rule__AssigningStep__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getVarsAssignment_0_0()); }
(rule__AssigningStep__VarsAssignment_0_0)
{ after(grammarAccess.getAssigningStepAccess().getVarsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssigningStep__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssigningStep__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getSEPARATORTerminalRuleCall_0_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getAssigningStepAccess().getSEPARATORTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssigningStep__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssigningStep__Group_5__0__Impl
	rule__AssigningStep__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getSEPARATORTerminalRuleCall_5_0()); }
	RULE_SEPARATOR
{ after(grammarAccess.getAssigningStepAccess().getSEPARATORTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssigningStep__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssigningStep__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getValuesAssignment_5_1()); }
(rule__AssigningStep__ValuesAssignment_5_1)
{ after(grammarAccess.getAssigningStepAccess().getValuesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CellValue__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellValue__Group_0__0__Impl
	rule__CellValue__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellValue__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellValueAccess().getCellValueAction_0_0()); }
(

)
{ after(grammarAccess.getCellValueAccess().getCellValueAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellValue__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellValue__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellValue__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellValueAccess().getFAssignment_0_1()); }
(rule__CellValue__FAssignment_0_1)
{ after(grammarAccess.getCellValueAccess().getFAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Values__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group__0__Impl
	rule__Values__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getValAssignment_0()); }
(rule__Values__ValAssignment_0)
{ after(grammarAccess.getValuesAccess().getValAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getGroup_1()); }
(rule__Values__Group_1__0)*
{ after(grammarAccess.getValuesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Values__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group_1__0__Impl
	rule__Values__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getSEPARATORTerminalRuleCall_1_0()); }
	RULE_SEPARATOR
{ after(grammarAccess.getValuesAccess().getSEPARATORTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getOthersAssignment_1_1()); }
(rule__Values__OthersAssignment_1_1)
{ after(grammarAccess.getValuesAccess().getOthersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScalarName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarName__Group__0__Impl
	rule__ScalarName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarNameAccess().getDollarSignLeftCurlyBracketKeyword_0()); }

	'${' 

{ after(grammarAccess.getScalarNameAccess().getDollarSignLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarName__Group__1__Impl
	rule__ScalarName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarNameAccess().getRobotTextParserRuleCall_1()); }
	ruleRobotText
{ after(grammarAccess.getScalarNameAccess().getRobotTextParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarNameAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getScalarNameAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ListName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListName__Group__0__Impl
	rule__ListName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListNameAccess().getCommercialAtLeftCurlyBracketKeyword_0()); }

	'@{' 

{ after(grammarAccess.getListNameAccess().getCommercialAtLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListName__Group__1__Impl
	rule__ListName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListNameAccess().getRobotTextParserRuleCall_1()); }
	ruleRobotText
{ after(grammarAccess.getListNameAccess().getRobotTextParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListNameAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getListNameAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RobotText__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotText__Group__0__Impl
	rule__RobotText__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotText__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTextAccess().getAlternatives_0()); }
(rule__RobotText__Alternatives_0)
{ after(grammarAccess.getRobotTextAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RobotText__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotText__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotText__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTextAccess().getGroup_1()); }
(rule__RobotText__Group_1__0)*
{ after(grammarAccess.getRobotTextAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RobotText__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotText__Group_1__0__Impl
	rule__RobotText__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotText__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTextAccess().getAlternatives_1_0()); }
(rule__RobotText__Alternatives_1_0)
{ after(grammarAccess.getRobotTextAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RobotText__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotText__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotText__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTextAccess().getTEXTTerminalRuleCall_1_1()); }
	RULE_TEXT
{ after(grammarAccess.getRobotTextAccess().getTEXTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MacroName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroName__Group__0__Impl
	rule__MacroName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroNameAccess().getTEXTTerminalRuleCall_0()); }
	RULE_TEXT
{ after(grammarAccess.getMacroNameAccess().getTEXTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroNameAccess().getGroup_1()); }
(rule__MacroName__Group_1__0)*
{ after(grammarAccess.getMacroNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MacroName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroName__Group_1__0__Impl
	rule__MacroName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroNameAccess().getAlternatives_1_0()); }
(rule__MacroName__Alternatives_1_0)
{ after(grammarAccess.getMacroNameAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroNameAccess().getTEXTTerminalRuleCall_1_1()); }
	RULE_TEXT
{ after(grammarAccess.getMacroNameAccess().getTEXTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__SettingsTable__HeaderAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingsTableAccess().getHeaderSettingsTableHeaderParserRuleCall_0_0()); }
	ruleSettingsTableHeader{ after(grammarAccess.getSettingsTableAccess().getHeaderSettingsTableHeaderParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SettingsTable__SettingsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingsTableAccess().getSettingsSettingParserRuleCall_1_1_0()); }
	ruleSetting{ after(grammarAccess.getSettingsTableAccess().getSettingsSettingParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTable__HeaderAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseTableAccess().getHeaderTestCaseTableHeaderParserRuleCall_0_0()); }
	ruleTestCaseTableHeader{ after(grammarAccess.getTestCaseTableAccess().getHeaderTestCaseTableHeaderParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTable__TestsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseTableAccess().getTestsTestCaseParserRuleCall_1_1_0()); }
	ruleTestCase{ after(grammarAccess.getTestCaseTableAccess().getTestsTestCaseParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTable__HeaderAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordTableAccess().getHeaderKeywordTableHeaderParserRuleCall_0_0()); }
	ruleKeywordTableHeader{ after(grammarAccess.getKeywordTableAccess().getHeaderKeywordTableHeaderParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTable__KeywordsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordTableAccess().getKeywordsKeywordParserRuleCall_1_1_0()); }
	ruleKeyword{ after(grammarAccess.getKeywordTableAccess().getKeywordsKeywordParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTable__HeaderAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesTableAccess().getHeaderVariablesTableHeaderParserRuleCall_0_0()); }
	ruleVariablesTableHeader{ after(grammarAccess.getVariablesTableAccess().getHeaderVariablesTableHeaderParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTable__VariablesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesTableAccess().getVariablesVariableParserRuleCall_1_1_0()); }
	ruleVariable{ after(grammarAccess.getVariablesTableAccess().getVariablesVariableParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getNameMacroNameParserRuleCall_0_0()); }
	ruleMacroName{ after(grammarAccess.getTestCaseAccess().getNameMacroNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__SettingsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getSettingsTestCaseSettingParserRuleCall_1_2_0()); }
	ruleTestCaseSetting{ after(grammarAccess.getTestCaseAccess().getSettingsTestCaseSettingParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__StepsAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getStepsRobotStepParserRuleCall_2_2_0()); }
	ruleRobotStep{ after(grammarAccess.getTestCaseAccess().getStepsRobotStepParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNameMacroNameParserRuleCall_0_0()); }
	ruleMacroName{ after(grammarAccess.getKeywordAccess().getNameMacroNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__SettingsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getSettingsKeywordSettingParserRuleCall_1_2_0()); }
	ruleKeywordSetting{ after(grammarAccess.getKeywordAccess().getSettingsKeywordSettingParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__StepsAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getStepsRobotStepParserRuleCall_2_2_0()); }
	ruleRobotStep{ after(grammarAccess.getKeywordAccess().getStepsRobotStepParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarVariableAccess().getNameScalarNameParserRuleCall_0_0()); }
	ruleScalarName{ after(grammarAccess.getScalarVariableAccess().getNameScalarNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarVariableAccess().getValueRobotTextParserRuleCall_2_0()); }
	ruleRobotText{ after(grammarAccess.getScalarVariableAccess().getValueRobotTextParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListVariable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListVariableAccess().getNameListNameParserRuleCall_0_0()); }
	ruleListName{ after(grammarAccess.getListVariableAccess().getNameListNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListVariable__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListVariableAccess().getValueValuesParserRuleCall_2_0()); }
	ruleValues{ after(grammarAccess.getListVariableAccess().getValueValuesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeTestSetting__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeTestSettingAccess().getNameAlternatives_0_0()); }
(rule__SomeTestSetting__NameAlternatives_0_0)
{ after(grammarAccess.getSomeTestSettingAccess().getNameAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeTestSetting__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeTestSettingAccess().getValueValuesParserRuleCall_2_0()); }
	ruleValues{ after(grammarAccess.getSomeTestSettingAccess().getValueValuesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordSetting__SettingAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordSettingAccess().getSettingAlternatives_0()); }
(rule__KeywordSetting__SettingAlternatives_0)
{ after(grammarAccess.getKeywordSettingAccess().getSettingAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getNameArgumentsKeyword_0_0()); }
(
{ before(grammarAccess.getArgumentsSettingAccess().getNameArgumentsKeyword_0_0()); }

	'[Arguments]' 

{ after(grammarAccess.getArgumentsSettingAccess().getNameArgumentsKeyword_0_0()); }
)

{ after(grammarAccess.getArgumentsSettingAccess().getNameArgumentsKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__ArgsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getArgsScalarNameParserRuleCall_1_1_0()); }
	ruleScalarName{ after(grammarAccess.getArgumentsSettingAccess().getArgsScalarNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__Default_argsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getDefault_argsScalarNameParserRuleCall_2_1_0()); }
	ruleScalarName{ after(grammarAccess.getArgumentsSettingAccess().getDefault_argsScalarNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentsSetting__DefaultsAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentsSettingAccess().getDefaultsRobotTextParserRuleCall_2_3_0()); }
	ruleRobotText{ after(grammarAccess.getArgumentsSettingAccess().getDefaultsRobotTextParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TeardownSetting__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTeardownSettingAccess().getNameTeardownKeyword_0_0()); }
(
{ before(grammarAccess.getTeardownSettingAccess().getNameTeardownKeyword_0_0()); }

	'[Teardown]' 

{ after(grammarAccess.getTeardownSettingAccess().getNameTeardownKeyword_0_0()); }
)

{ after(grammarAccess.getTeardownSettingAccess().getNameTeardownKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TeardownSetting__StepAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTeardownSettingAccess().getStepExecutingStepParserRuleCall_2_0()); }
	ruleExecutingStep{ after(grammarAccess.getTeardownSettingAccess().getStepExecutingStepParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetupSetting__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetupSettingAccess().getNameSetupKeyword_0_0()); }
(
{ before(grammarAccess.getSetupSettingAccess().getNameSetupKeyword_0_0()); }

	'[Setup]' 

{ after(grammarAccess.getSetupSettingAccess().getNameSetupKeyword_0_0()); }
)

{ after(grammarAccess.getSetupSettingAccess().getNameSetupKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SetupSetting__StepAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetupSettingAccess().getStepExecutingStepParserRuleCall_2_0()); }
	ruleExecutingStep{ after(grammarAccess.getSetupSettingAccess().getStepExecutingStepParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeKeywordSetting__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeKeywordSettingAccess().getNameAlternatives_0_0()); }
(rule__SomeKeywordSetting__NameAlternatives_0_0)
{ after(grammarAccess.getSomeKeywordSettingAccess().getNameAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SomeKeywordSetting__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSomeKeywordSettingAccess().getValueValuesParserRuleCall_2_0()); }
	ruleValues{ after(grammarAccess.getSomeKeywordSettingAccess().getValueValuesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesSetting__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesSettingAccess().getNameAlternatives_0_0()); }
(rule__ValuesSetting__NameAlternatives_0_0)
{ after(grammarAccess.getValuesSettingAccess().getNameAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesSetting__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesSettingAccess().getValueValuesParserRuleCall_2_0()); }
	ruleValues{ after(grammarAccess.getValuesSettingAccess().getValueValuesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StepSetting__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepSettingAccess().getNameAlternatives_0_0()); }
(rule__StepSetting__NameAlternatives_0_0)
{ after(grammarAccess.getStepSettingAccess().getNameAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StepSetting__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepSettingAccess().getValueExecutingStepParserRuleCall_2_0()); }
	ruleExecutingStep{ after(grammarAccess.getStepSettingAccess().getValueExecutingStepParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutingStep__KeywordAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutingStepAccess().getKeywordKeywordCrossReference_0_0()); }
(
{ before(grammarAccess.getExecutingStepAccess().getKeywordKeywordMacroNameParserRuleCall_0_0_1()); }
	ruleMacroName{ after(grammarAccess.getExecutingStepAccess().getKeywordKeywordMacroNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getExecutingStepAccess().getKeywordKeywordCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutingStep__ValuesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutingStepAccess().getValuesCellValueParserRuleCall_1_1_0()); }
	ruleCellValue{ after(grammarAccess.getExecutingStepAccess().getValuesCellValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__VarsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getVarsVariableCrossReference_0_0_0()); }
(
{ before(grammarAccess.getAssigningStepAccess().getVarsVariableScalarNameParserRuleCall_0_0_0_1()); }
	ruleScalarName{ after(grammarAccess.getAssigningStepAccess().getVarsVariableScalarNameParserRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getAssigningStepAccess().getVarsVariableCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__VarsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getVarsVariableCrossReference_1_0_0()); }
(
{ before(grammarAccess.getAssigningStepAccess().getVarsVariableScalarNameParserRuleCall_1_0_0_1()); }
	ruleScalarName{ after(grammarAccess.getAssigningStepAccess().getVarsVariableScalarNameParserRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getAssigningStepAccess().getVarsVariableCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__VarsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getVarsVariableCrossReference_1_1_0()); }
(
{ before(grammarAccess.getAssigningStepAccess().getVarsVariableListNameParserRuleCall_1_1_0_1()); }
	ruleListName{ after(grammarAccess.getAssigningStepAccess().getVarsVariableListNameParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getAssigningStepAccess().getVarsVariableCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__KeywordAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getKeywordKeywordCrossReference_4_0()); }
(
{ before(grammarAccess.getAssigningStepAccess().getKeywordKeywordMacroNameParserRuleCall_4_0_1()); }
	ruleMacroName{ after(grammarAccess.getAssigningStepAccess().getKeywordKeywordMacroNameParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getAssigningStepAccess().getKeywordKeywordCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssigningStep__ValuesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssigningStepAccess().getValuesCellValueParserRuleCall_5_1_0()); }
	ruleCellValue{ after(grammarAccess.getAssigningStepAccess().getValuesCellValueParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellValue__FAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellValueAccess().getFRobotTextParserRuleCall_0_1_0()); }
	ruleRobotText{ after(grammarAccess.getCellValueAccess().getFRobotTextParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellValue__LinkAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellValueAccess().getLinkScalarVariableCrossReference_1_0()); }
(
{ before(grammarAccess.getCellValueAccess().getLinkScalarVariableScalarNameParserRuleCall_1_0_1()); }
	ruleScalarName{ after(grammarAccess.getCellValueAccess().getLinkScalarVariableScalarNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getCellValueAccess().getLinkScalarVariableCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Values__ValAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getValRobotTextParserRuleCall_0_0()); }
	ruleRobotText{ after(grammarAccess.getValuesAccess().getValRobotTextParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Values__OthersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getOthersRobotTextParserRuleCall_1_1_0()); }
	ruleRobotText{ after(grammarAccess.getValuesAccess().getOthersRobotTextParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NL : ('\r'|'\n')+;

RULE_TEXT : ~(('='|' '|'\r'|'\n'|'*'|'{'|'}'|'$'|'@'))+;

RULE_SEPARATOR : ' ' ' '+;

RULE_COMMENT : ' '* '#' ~(('\r'|'\n'))*;


