/*
* generated by Xtext
*/
grammar InternalSpace;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.robotframework.text.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.robotframework.text.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.robotframework.text.services.SpaceGrammarAccess;

}

@parser::members {
 
 	private SpaceGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SpaceGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getModelAccess().getTablesAssignment()); }
(rule__Model__TablesAssignment)
{ after(grammarAccess.getModelAccess().getTablesAssignment()); }
)
(
{ before(grammarAccess.getModelAccess().getTablesAssignment()); }
(rule__Model__TablesAssignment)*
{ after(grammarAccess.getModelAccess().getTablesAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRobotTable
entryRuleRobotTable 
:
{ before(grammarAccess.getRobotTableRule()); }
	 ruleRobotTable
{ after(grammarAccess.getRobotTableRule()); } 
	 EOF 
;

// Rule RobotTable
ruleRobotTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRobotTableAccess().getAlternatives()); }
(rule__RobotTable__Alternatives)
{ after(grammarAccess.getRobotTableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSettingsTable
entryRuleSettingsTable 
:
{ before(grammarAccess.getSettingsTableRule()); }
	 ruleSettingsTable
{ after(grammarAccess.getSettingsTableRule()); } 
	 EOF 
;

// Rule SettingsTable
ruleSettingsTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSettingsTableAccess().getGroup()); }
(rule__SettingsTable__Group__0)
{ after(grammarAccess.getSettingsTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestCaseTable
entryRuleTestCaseTable 
:
{ before(grammarAccess.getTestCaseTableRule()); }
	 ruleTestCaseTable
{ after(grammarAccess.getTestCaseTableRule()); } 
	 EOF 
;

// Rule TestCaseTable
ruleTestCaseTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestCaseTableAccess().getGroup()); }
(rule__TestCaseTable__Group__0)
{ after(grammarAccess.getTestCaseTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeywordTable
entryRuleKeywordTable 
:
{ before(grammarAccess.getKeywordTableRule()); }
	 ruleKeywordTable
{ after(grammarAccess.getKeywordTableRule()); } 
	 EOF 
;

// Rule KeywordTable
ruleKeywordTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordTableAccess().getGroup()); }
(rule__KeywordTable__Group__0)
{ after(grammarAccess.getKeywordTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariablesTable
entryRuleVariablesTable 
:
{ before(grammarAccess.getVariablesTableRule()); }
	 ruleVariablesTable
{ after(grammarAccess.getVariablesTableRule()); } 
	 EOF 
;

// Rule VariablesTable
ruleVariablesTable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariablesTableAccess().getGroup()); }
(rule__VariablesTable__Group__0)
{ after(grammarAccess.getVariablesTableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetting
entryRuleSetting 
:
{ before(grammarAccess.getSettingRule()); }
	 ruleSetting
{ after(grammarAccess.getSettingRule()); } 
	 EOF 
;

// Rule Setting
ruleSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSettingAccess().getAlternatives()); }
(rule__Setting__Alternatives)
{ after(grammarAccess.getSettingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestCase
entryRuleTestCase 
:
{ before(grammarAccess.getTestCaseRule()); }
	 ruleTestCase
{ after(grammarAccess.getTestCaseRule()); } 
	 EOF 
;

// Rule TestCase
ruleTestCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestCaseAccess().getGroup()); }
(rule__TestCase__Group__0)
{ after(grammarAccess.getTestCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyword
entryRuleKeyword 
:
{ before(grammarAccess.getKeywordRule()); }
	 ruleKeyword
{ after(grammarAccess.getKeywordRule()); } 
	 EOF 
;

// Rule Keyword
ruleKeyword
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordAccess().getGroup()); }
(rule__Keyword__Group__0)
{ after(grammarAccess.getKeywordAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getAlternatives()); }
(rule__Variable__Alternatives)
{ after(grammarAccess.getVariableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScalarVariable
entryRuleScalarVariable 
:
{ before(grammarAccess.getScalarVariableRule()); }
	 ruleScalarVariable
{ after(grammarAccess.getScalarVariableRule()); } 
	 EOF 
;

// Rule ScalarVariable
ruleScalarVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScalarVariableAccess().getGroup()); }
(rule__ScalarVariable__Group__0)
{ after(grammarAccess.getScalarVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListVariable
entryRuleListVariable 
:
{ before(grammarAccess.getListVariableRule()); }
	 ruleListVariable
{ after(grammarAccess.getListVariableRule()); } 
	 EOF 
;

// Rule ListVariable
ruleListVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListVariableAccess().getGroup()); }
(rule__ListVariable__Group__0)
{ after(grammarAccess.getListVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestCaseSetting
entryRuleTestCaseSetting 
:
{ before(grammarAccess.getTestCaseSettingRule()); }
	 ruleTestCaseSetting
{ after(grammarAccess.getTestCaseSettingRule()); } 
	 EOF 
;

// Rule TestCaseSetting
ruleTestCaseSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestCaseSettingAccess().getGroup()); }
(rule__TestCaseSetting__Group__0)
{ after(grammarAccess.getTestCaseSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeywordSetting
entryRuleKeywordSetting 
:
{ before(grammarAccess.getKeywordSettingRule()); }
	 ruleKeywordSetting
{ after(grammarAccess.getKeywordSettingRule()); } 
	 EOF 
;

// Rule KeywordSetting
ruleKeywordSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordSettingAccess().getGroup()); }
(rule__KeywordSetting__Group__0)
{ after(grammarAccess.getKeywordSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndentedStep
entryRuleIndentedStep 
:
{ before(grammarAccess.getIndentedStepRule()); }
	 ruleIndentedStep
{ after(grammarAccess.getIndentedStepRule()); } 
	 EOF 
;

// Rule IndentedStep
ruleIndentedStep
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndentedStepAccess().getGroup()); }
(rule__IndentedStep__Group__0)
{ after(grammarAccess.getIndentedStepAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOneValueSetting
entryRuleOneValueSetting 
:
{ before(grammarAccess.getOneValueSettingRule()); }
	 ruleOneValueSetting
{ after(grammarAccess.getOneValueSettingRule()); } 
	 EOF 
;

// Rule OneValueSetting
ruleOneValueSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOneValueSettingAccess().getGroup()); }
(rule__OneValueSetting__Group__0)
{ after(grammarAccess.getOneValueSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuesSetting
entryRuleValuesSetting 
:
{ before(grammarAccess.getValuesSettingRule()); }
	 ruleValuesSetting
{ after(grammarAccess.getValuesSettingRule()); } 
	 EOF 
;

// Rule ValuesSetting
ruleValuesSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuesSettingAccess().getGroup()); }
(rule__ValuesSetting__Group__0)
{ after(grammarAccess.getValuesSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStepSetting
entryRuleStepSetting 
:
{ before(grammarAccess.getStepSettingRule()); }
	 ruleStepSetting
{ after(grammarAccess.getStepSettingRule()); } 
	 EOF 
;

// Rule StepSetting
ruleStepSetting
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStepSettingAccess().getGroup()); }
(rule__StepSetting__Group__0)
{ after(grammarAccess.getStepSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRobotStep
entryRuleRobotStep 
:
{ before(grammarAccess.getRobotStepRule()); }
	 ruleRobotStep
{ after(grammarAccess.getRobotStepRule()); } 
	 EOF 
;

// Rule RobotStep
ruleRobotStep
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRobotStepAccess().getGroup()); }
(rule__RobotStep__Group__0)
{ after(grammarAccess.getRobotStepAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValues
entryRuleValues 
:
{ before(grammarAccess.getValuesRule()); }
	 ruleValues
{ after(grammarAccess.getValuesRule()); } 
	 EOF 
;

// Rule Values
ruleValues
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuesAccess().getGroup()); }
(rule__Values__Group__0)
{ after(grammarAccess.getValuesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRobotText
entryRuleRobotText 
:
{ before(grammarAccess.getRobotTextRule()); }
	 ruleRobotText
{ after(grammarAccess.getRobotTextRule()); } 
	 EOF 
;

// Rule RobotText
ruleRobotText
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRobotTextAccess().getGroup()); }
(rule__RobotText__Group__0)
{ after(grammarAccess.getRobotTextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMacroName
entryRuleMacroName 
:
{ before(grammarAccess.getMacroNameRule()); }
	 ruleMacroName
{ after(grammarAccess.getMacroNameRule()); } 
	 EOF 
;

// Rule MacroName
ruleMacroName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroNameAccess().getGroup()); }
(rule__MacroName__Group__0)
{ after(grammarAccess.getMacroNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule TestCaseSettingName
ruleTestCaseSettingName
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseSettingNameAccess().getAlternatives()); }
(rule__TestCaseSettingName__Alternatives)
{ after(grammarAccess.getTestCaseSettingNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule KeywordSettingName
ruleKeywordSettingName
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordSettingNameAccess().getAlternatives()); }
(rule__KeywordSettingName__Alternatives)
{ after(grammarAccess.getKeywordSettingNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule RobotOneValueSetting
ruleRobotOneValueSetting
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotOneValueSettingAccess().getAlternatives()); }
(rule__RobotOneValueSetting__Alternatives)
{ after(grammarAccess.getRobotOneValueSettingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule RobotValuesSetting
ruleRobotValuesSetting
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotValuesSettingAccess().getAlternatives()); }
(rule__RobotValuesSetting__Alternatives)
{ after(grammarAccess.getRobotValuesSettingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule RobotStepSetting
ruleRobotStepSetting
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotStepSettingAccess().getAlternatives()); }
(rule__RobotStepSetting__Alternatives)
{ after(grammarAccess.getRobotStepSettingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__RobotTable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTableAccess().getSettingsTableParserRuleCall_0()); }
	ruleSettingsTable
{ after(grammarAccess.getRobotTableAccess().getSettingsTableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRobotTableAccess().getTestCaseTableParserRuleCall_1()); }
	ruleTestCaseTable
{ after(grammarAccess.getRobotTableAccess().getTestCaseTableParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRobotTableAccess().getKeywordTableParserRuleCall_2()); }
	ruleKeywordTable
{ after(grammarAccess.getRobotTableAccess().getKeywordTableParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRobotTableAccess().getVariablesTableParserRuleCall_3()); }
	ruleVariablesTable
{ after(grammarAccess.getRobotTableAccess().getVariablesTableParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingAccess().getOneValueSettingParserRuleCall_0()); }
	ruleOneValueSetting
{ after(grammarAccess.getSettingAccess().getOneValueSettingParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSettingAccess().getValuesSettingParserRuleCall_1()); }
	ruleValuesSetting
{ after(grammarAccess.getSettingAccess().getValuesSettingParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSettingAccess().getStepSettingParserRuleCall_2()); }
	ruleStepSetting
{ after(grammarAccess.getSettingAccess().getStepSettingParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getScalarVariableParserRuleCall_0()); }
	ruleScalarVariable
{ after(grammarAccess.getVariableAccess().getScalarVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getListVariableParserRuleCall_1()); }
	ruleListVariable
{ after(grammarAccess.getVariableAccess().getListVariableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RobotText__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTextAccess().getAsteriskKeyword_0_0()); }

	'*' 

{ after(grammarAccess.getRobotTextAccess().getAsteriskKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getRobotTextAccess().getTEXTTerminalRuleCall_0_1()); }
	RULE_TEXT
{ after(grammarAccess.getRobotTextAccess().getTEXTTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RobotText__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTextAccess().getSpaceKeyword_1_0_0()); }

	' ' 

{ after(grammarAccess.getRobotTextAccess().getSpaceKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getRobotTextAccess().getAsteriskKeyword_1_0_1()); }

	'*' 

{ after(grammarAccess.getRobotTextAccess().getAsteriskKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MacroName__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroNameAccess().getSpaceKeyword_1_0_0()); }

	' ' 

{ after(grammarAccess.getMacroNameAccess().getSpaceKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getMacroNameAccess().getAsteriskKeyword_1_0_1()); }

	'*' 

{ after(grammarAccess.getMacroNameAccess().getAsteriskKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseSettingName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseSettingNameAccess().getDOCUMENTATIONEnumLiteralDeclaration_0()); }
(	'[Documentation]' 
)
{ after(grammarAccess.getTestCaseSettingNameAccess().getDOCUMENTATIONEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTestCaseSettingNameAccess().getTIMEOUTEnumLiteralDeclaration_1()); }
(	'[Timeout]' 
)
{ after(grammarAccess.getTestCaseSettingNameAccess().getTIMEOUTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTestCaseSettingNameAccess().getSETUPEnumLiteralDeclaration_2()); }
(	'[Setup]' 
)
{ after(grammarAccess.getTestCaseSettingNameAccess().getSETUPEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getTestCaseSettingNameAccess().getTEARDOWNEnumLiteralDeclaration_3()); }
(	'[Teardown]' 
)
{ after(grammarAccess.getTestCaseSettingNameAccess().getTEARDOWNEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getTestCaseSettingNameAccess().getTAGSEnumLiteralDeclaration_4()); }
(	'[Tags]' 
)
{ after(grammarAccess.getTestCaseSettingNameAccess().getTAGSEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getTestCaseSettingNameAccess().getTEMPLATEEnumLiteralDeclaration_5()); }
(	'[Template]' 
)
{ after(grammarAccess.getTestCaseSettingNameAccess().getTEMPLATEEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordSettingName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordSettingNameAccess().getDOCUMENTATIONEnumLiteralDeclaration_0()); }
(	'[Documentation]' 
)
{ after(grammarAccess.getKeywordSettingNameAccess().getDOCUMENTATIONEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getKeywordSettingNameAccess().getTIMEOUTEnumLiteralDeclaration_1()); }
(	'[Timeout]' 
)
{ after(grammarAccess.getKeywordSettingNameAccess().getTIMEOUTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getKeywordSettingNameAccess().getTEARDOWNEnumLiteralDeclaration_2()); }
(	'[Teardown]' 
)
{ after(grammarAccess.getKeywordSettingNameAccess().getTEARDOWNEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getKeywordSettingNameAccess().getARGUMENTSEnumLiteralDeclaration_3()); }
(	'[Arguments]' 
)
{ after(grammarAccess.getKeywordSettingNameAccess().getARGUMENTSEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getKeywordSettingNameAccess().getRETURNEnumLiteralDeclaration_4()); }
(	'[Return]' 
)
{ after(grammarAccess.getKeywordSettingNameAccess().getRETURNEnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RobotOneValueSetting__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotOneValueSettingAccess().getDOCUMENTATIONEnumLiteralDeclaration_0()); }
(	'Documentation' 
)
{ after(grammarAccess.getRobotOneValueSettingAccess().getDOCUMENTATIONEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRobotOneValueSettingAccess().getTEST_TIMEOUTEnumLiteralDeclaration_1()); }
(	'Test Timeout' 
)
{ after(grammarAccess.getRobotOneValueSettingAccess().getTEST_TIMEOUTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RobotValuesSetting__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotValuesSettingAccess().getFORCE_TAGSEnumLiteralDeclaration_0()); }
(	'Force Tags' 
)
{ after(grammarAccess.getRobotValuesSettingAccess().getFORCE_TAGSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRobotValuesSettingAccess().getDEFAULT_TAGSEnumLiteralDeclaration_1()); }
(	'Default Tags' 
)
{ after(grammarAccess.getRobotValuesSettingAccess().getDEFAULT_TAGSEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRobotValuesSettingAccess().getLIBRARY_IMPORTEnumLiteralDeclaration_2()); }
(	'Library' 
)
{ after(grammarAccess.getRobotValuesSettingAccess().getLIBRARY_IMPORTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRobotValuesSettingAccess().getRESOURCE_IMPORTEnumLiteralDeclaration_3()); }
(	'Resource' 
)
{ after(grammarAccess.getRobotValuesSettingAccess().getRESOURCE_IMPORTEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RobotStepSetting__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotStepSettingAccess().getSUITE_SETUPEnumLiteralDeclaration_0()); }
(	'Suite Setup' 
)
{ after(grammarAccess.getRobotStepSettingAccess().getSUITE_SETUPEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRobotStepSettingAccess().getSUITE_TEARDOWNEnumLiteralDeclaration_1()); }
(	'Suite Teardown' 
)
{ after(grammarAccess.getRobotStepSettingAccess().getSUITE_TEARDOWNEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRobotStepSettingAccess().getTEST_SETUPEnumLiteralDeclaration_2()); }
(	'Test Setup' 
)
{ after(grammarAccess.getRobotStepSettingAccess().getTEST_SETUPEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRobotStepSettingAccess().getTEST_TEARDOWNEnumLiteralDeclaration_3()); }
(	'Test Teardown' 
)
{ after(grammarAccess.getRobotStepSettingAccess().getTEST_TEARDOWNEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SettingsTable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettingsTable__Group__0__Impl
	rule__SettingsTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SettingsTable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingsTableAccess().getSettingsKeyword_0()); }

	'*** Settings ***' 

{ after(grammarAccess.getSettingsTableAccess().getSettingsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SettingsTable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettingsTable__Group__1__Impl
	rule__SettingsTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SettingsTable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingsTableAccess().getNLTerminalRuleCall_1()); }
	RULE_NL
{ after(grammarAccess.getSettingsTableAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SettingsTable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettingsTable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SettingsTable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSettingsTableAccess().getSettingsAssignment_2()); }
(rule__SettingsTable__SettingsAssignment_2)
{ after(grammarAccess.getSettingsTableAccess().getSettingsAssignment_2()); }
)
(
{ before(grammarAccess.getSettingsTableAccess().getSettingsAssignment_2()); }
(rule__SettingsTable__SettingsAssignment_2)*
{ after(grammarAccess.getSettingsTableAccess().getSettingsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TestCaseTable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseTable__Group__0__Impl
	rule__TestCaseTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseTableAccess().getTestCasesKeyword_0()); }

	'*** Test Cases ***' 

{ after(grammarAccess.getTestCaseTableAccess().getTestCasesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCaseTable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseTable__Group__1__Impl
	rule__TestCaseTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseTableAccess().getNLTerminalRuleCall_1()); }
	RULE_NL
{ after(grammarAccess.getTestCaseTableAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCaseTable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseTable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTestCaseTableAccess().getTestsAssignment_2()); }
(rule__TestCaseTable__TestsAssignment_2)
{ after(grammarAccess.getTestCaseTableAccess().getTestsAssignment_2()); }
)
(
{ before(grammarAccess.getTestCaseTableAccess().getTestsAssignment_2()); }
(rule__TestCaseTable__TestsAssignment_2)*
{ after(grammarAccess.getTestCaseTableAccess().getTestsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeywordTable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordTable__Group__0__Impl
	rule__KeywordTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordTableAccess().getKeywordsKeyword_0()); }

	'*** Keywords ***' 

{ after(grammarAccess.getKeywordTableAccess().getKeywordsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordTable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordTable__Group__1__Impl
	rule__KeywordTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordTableAccess().getNLTerminalRuleCall_1()); }
	RULE_NL
{ after(grammarAccess.getKeywordTableAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordTable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordTable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getKeywordTableAccess().getKeywordsAssignment_2()); }
(rule__KeywordTable__KeywordsAssignment_2)
{ after(grammarAccess.getKeywordTableAccess().getKeywordsAssignment_2()); }
)
(
{ before(grammarAccess.getKeywordTableAccess().getKeywordsAssignment_2()); }
(rule__KeywordTable__KeywordsAssignment_2)*
{ after(grammarAccess.getKeywordTableAccess().getKeywordsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariablesTable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesTable__Group__0__Impl
	rule__VariablesTable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesTableAccess().getVariablesKeyword_0()); }

	'*** Variables ***' 

{ after(grammarAccess.getVariablesTableAccess().getVariablesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariablesTable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesTable__Group__1__Impl
	rule__VariablesTable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesTableAccess().getNLTerminalRuleCall_1()); }
	RULE_NL
{ after(grammarAccess.getVariablesTableAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariablesTable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariablesTable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVariablesTableAccess().getVariablesAssignment_2()); }
(rule__VariablesTable__VariablesAssignment_2)
{ after(grammarAccess.getVariablesTableAccess().getVariablesAssignment_2()); }
)
(
{ before(grammarAccess.getVariablesTableAccess().getVariablesAssignment_2()); }
(rule__VariablesTable__VariablesAssignment_2)*
{ after(grammarAccess.getVariablesTableAccess().getVariablesAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TestCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__0__Impl
	rule__TestCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getNameAssignment_0()); }
(rule__TestCase__NameAssignment_0)
{ after(grammarAccess.getTestCaseAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__1__Impl
	rule__TestCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getNLTerminalRuleCall_1()); }
	RULE_NL
{ after(grammarAccess.getTestCaseAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__2__Impl
	rule__TestCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getSettingsAssignment_2()); }
(rule__TestCase__SettingsAssignment_2)*
{ after(grammarAccess.getTestCaseAccess().getSettingsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTestCaseAccess().getStepsAssignment_3()); }
(rule__TestCase__StepsAssignment_3)
{ after(grammarAccess.getTestCaseAccess().getStepsAssignment_3()); }
)
(
{ before(grammarAccess.getTestCaseAccess().getStepsAssignment_3()); }
(rule__TestCase__StepsAssignment_3)*
{ after(grammarAccess.getTestCaseAccess().getStepsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Keyword__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group__0__Impl
	rule__Keyword__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNameAssignment_0()); }
(rule__Keyword__NameAssignment_0)
{ after(grammarAccess.getKeywordAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyword__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group__1__Impl
	rule__Keyword__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNLTerminalRuleCall_1()); }
	RULE_NL
{ after(grammarAccess.getKeywordAccess().getNLTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyword__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group__2__Impl
	rule__Keyword__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getSettingsAssignment_2()); }
(rule__Keyword__SettingsAssignment_2)*
{ after(grammarAccess.getKeywordAccess().getSettingsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyword__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyword__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getKeywordAccess().getStepsAssignment_3()); }
(rule__Keyword__StepsAssignment_3)
{ after(grammarAccess.getKeywordAccess().getStepsAssignment_3()); }
)
(
{ before(grammarAccess.getKeywordAccess().getStepsAssignment_3()); }
(rule__Keyword__StepsAssignment_3)*
{ after(grammarAccess.getKeywordAccess().getStepsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ScalarVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarVariable__Group__0__Impl
	rule__ScalarVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarVariableAccess().getDollarSignLeftCurlyBracketKeyword_0()); }

	'${' 

{ after(grammarAccess.getScalarVariableAccess().getDollarSignLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarVariable__Group__1__Impl
	rule__ScalarVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarVariableAccess().getNameAssignment_1()); }
(rule__ScalarVariable__NameAssignment_1)
{ after(grammarAccess.getScalarVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarVariable__Group__2__Impl
	rule__ScalarVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarVariableAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getScalarVariableAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarVariable__Group__3__Impl
	rule__ScalarVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarVariableAccess().getSEPARATORTerminalRuleCall_3()); }
	RULE_SEPARATOR
{ after(grammarAccess.getScalarVariableAccess().getSEPARATORTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarVariable__Group__4__Impl
	rule__ScalarVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarVariableAccess().getRobotTextParserRuleCall_4()); }
	ruleRobotText
{ after(grammarAccess.getScalarVariableAccess().getRobotTextParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarVariable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScalarVariable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarVariableAccess().getNLTerminalRuleCall_5()); }
	RULE_NL
{ after(grammarAccess.getScalarVariableAccess().getNLTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ListVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListVariable__Group__0__Impl
	rule__ListVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListVariableAccess().getCommercialAtLeftCurlyBracketKeyword_0()); }

	'@{' 

{ after(grammarAccess.getListVariableAccess().getCommercialAtLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListVariable__Group__1__Impl
	rule__ListVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListVariableAccess().getNameAssignment_1()); }
(rule__ListVariable__NameAssignment_1)
{ after(grammarAccess.getListVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListVariable__Group__2__Impl
	rule__ListVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListVariableAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getListVariableAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListVariable__Group__3__Impl
	rule__ListVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListVariableAccess().getSEPARATORTerminalRuleCall_3()); }
	RULE_SEPARATOR
{ after(grammarAccess.getListVariableAccess().getSEPARATORTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListVariableAccess().getValuesParserRuleCall_4()); }
	ruleValues
{ after(grammarAccess.getListVariableAccess().getValuesParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TestCaseSetting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseSetting__Group__0__Impl
	rule__TestCaseSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseSetting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseSettingAccess().getSEPARATORTerminalRuleCall_0()); }
	RULE_SEPARATOR
{ after(grammarAccess.getTestCaseSettingAccess().getSEPARATORTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCaseSetting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseSetting__Group__1__Impl
	rule__TestCaseSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseSetting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseSettingAccess().getNameAssignment_1()); }
(rule__TestCaseSetting__NameAssignment_1)
{ after(grammarAccess.getTestCaseSettingAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCaseSetting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseSetting__Group__2__Impl
	rule__TestCaseSetting__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseSetting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseSettingAccess().getSEPARATORTerminalRuleCall_2()); }
	RULE_SEPARATOR
{ after(grammarAccess.getTestCaseSettingAccess().getSEPARATORTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCaseSetting__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCaseSetting__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseSetting__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseSettingAccess().getValueAssignment_3()); }
(rule__TestCaseSetting__ValueAssignment_3)
{ after(grammarAccess.getTestCaseSettingAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeywordSetting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordSetting__Group__0__Impl
	rule__KeywordSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordSetting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordSettingAccess().getSEPARATORTerminalRuleCall_0()); }
	RULE_SEPARATOR
{ after(grammarAccess.getKeywordSettingAccess().getSEPARATORTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordSetting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordSetting__Group__1__Impl
	rule__KeywordSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordSetting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordSettingAccess().getNameAssignment_1()); }
(rule__KeywordSetting__NameAssignment_1)
{ after(grammarAccess.getKeywordSettingAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordSetting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordSetting__Group__2__Impl
	rule__KeywordSetting__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordSetting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordSettingAccess().getSEPARATORTerminalRuleCall_2()); }
	RULE_SEPARATOR
{ after(grammarAccess.getKeywordSettingAccess().getSEPARATORTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeywordSetting__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeywordSetting__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordSetting__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordSettingAccess().getValueAssignment_3()); }
(rule__KeywordSetting__ValueAssignment_3)
{ after(grammarAccess.getKeywordSettingAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IndentedStep__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndentedStep__Group__0__Impl
	rule__IndentedStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndentedStep__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndentedStepAccess().getSEPARATORTerminalRuleCall_0()); }
	RULE_SEPARATOR
{ after(grammarAccess.getIndentedStepAccess().getSEPARATORTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndentedStep__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndentedStep__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndentedStep__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndentedStepAccess().getRobotStepParserRuleCall_1()); }
	ruleRobotStep
{ after(grammarAccess.getIndentedStepAccess().getRobotStepParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OneValueSetting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneValueSetting__Group__0__Impl
	rule__OneValueSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneValueSetting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneValueSettingAccess().getNameAssignment_0()); }
(rule__OneValueSetting__NameAssignment_0)
{ after(grammarAccess.getOneValueSettingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneValueSetting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneValueSetting__Group__1__Impl
	rule__OneValueSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneValueSetting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneValueSettingAccess().getSEPARATORTerminalRuleCall_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getOneValueSettingAccess().getSEPARATORTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneValueSetting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneValueSetting__Group__2__Impl
	rule__OneValueSetting__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OneValueSetting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneValueSettingAccess().getValueAssignment_2()); }
(rule__OneValueSetting__ValueAssignment_2)
{ after(grammarAccess.getOneValueSettingAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneValueSetting__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneValueSetting__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneValueSetting__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneValueSettingAccess().getNLTerminalRuleCall_3()); }
	RULE_NL
{ after(grammarAccess.getOneValueSettingAccess().getNLTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ValuesSetting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuesSetting__Group__0__Impl
	rule__ValuesSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesSetting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesSettingAccess().getNameAssignment_0()); }
(rule__ValuesSetting__NameAssignment_0)
{ after(grammarAccess.getValuesSettingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuesSetting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuesSetting__Group__1__Impl
	rule__ValuesSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesSetting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesSettingAccess().getSEPARATORTerminalRuleCall_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getValuesSettingAccess().getSEPARATORTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuesSetting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuesSetting__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesSetting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesSettingAccess().getValueAssignment_2()); }
(rule__ValuesSetting__ValueAssignment_2)
{ after(grammarAccess.getValuesSettingAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StepSetting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepSetting__Group__0__Impl
	rule__StepSetting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepSetting__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepSettingAccess().getNameAssignment_0()); }
(rule__StepSetting__NameAssignment_0)
{ after(grammarAccess.getStepSettingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StepSetting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepSetting__Group__1__Impl
	rule__StepSetting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StepSetting__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepSettingAccess().getSEPARATORTerminalRuleCall_1()); }
	RULE_SEPARATOR
{ after(grammarAccess.getStepSettingAccess().getSEPARATORTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StepSetting__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepSetting__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepSetting__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepSettingAccess().getValueAssignment_2()); }
(rule__StepSetting__ValueAssignment_2)
{ after(grammarAccess.getStepSettingAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RobotStep__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotStep__Group__0__Impl
	rule__RobotStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotStep__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotStepAccess().getKeywordAssignment_0()); }
(rule__RobotStep__KeywordAssignment_0)
{ after(grammarAccess.getRobotStepAccess().getKeywordAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RobotStep__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotStep__Group__1__Impl
	rule__RobotStep__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotStep__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotStepAccess().getGroup_1()); }
(rule__RobotStep__Group_1__0)*
{ after(grammarAccess.getRobotStepAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RobotStep__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotStep__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotStep__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotStepAccess().getNLTerminalRuleCall_2()); }
	RULE_NL
{ after(grammarAccess.getRobotStepAccess().getNLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RobotStep__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotStep__Group_1__0__Impl
	rule__RobotStep__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotStep__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotStepAccess().getSEPARATORTerminalRuleCall_1_0()); }
	RULE_SEPARATOR
{ after(grammarAccess.getRobotStepAccess().getSEPARATORTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RobotStep__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotStep__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotStep__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotStepAccess().getRobotTextParserRuleCall_1_1()); }
	ruleRobotText
{ after(grammarAccess.getRobotStepAccess().getRobotTextParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Values__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group__0__Impl
	rule__Values__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getRobotTextParserRuleCall_0()); }
	ruleRobotText
{ after(grammarAccess.getValuesAccess().getRobotTextParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group__1__Impl
	rule__Values__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getGroup_1()); }
(rule__Values__Group_1__0)*
{ after(grammarAccess.getValuesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getNLTerminalRuleCall_2()); }
	RULE_NL
{ after(grammarAccess.getValuesAccess().getNLTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Values__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group_1__0__Impl
	rule__Values__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getSEPARATORTerminalRuleCall_1_0()); }
	RULE_SEPARATOR
{ after(grammarAccess.getValuesAccess().getSEPARATORTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Values__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Values__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Values__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesAccess().getRobotTextParserRuleCall_1_1()); }
	ruleRobotText
{ after(grammarAccess.getValuesAccess().getRobotTextParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RobotText__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotText__Group__0__Impl
	rule__RobotText__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotText__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTextAccess().getAlternatives_0()); }
(rule__RobotText__Alternatives_0)
{ after(grammarAccess.getRobotTextAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RobotText__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotText__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotText__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTextAccess().getGroup_1()); }
(rule__RobotText__Group_1__0)*
{ after(grammarAccess.getRobotTextAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RobotText__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotText__Group_1__0__Impl
	rule__RobotText__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotText__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTextAccess().getAlternatives_1_0()); }
(rule__RobotText__Alternatives_1_0)
{ after(grammarAccess.getRobotTextAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RobotText__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RobotText__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RobotText__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotTextAccess().getTEXTTerminalRuleCall_1_1()); }
	RULE_TEXT
{ after(grammarAccess.getRobotTextAccess().getTEXTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MacroName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroName__Group__0__Impl
	rule__MacroName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroNameAccess().getTEXTTerminalRuleCall_0()); }
	RULE_TEXT
{ after(grammarAccess.getMacroNameAccess().getTEXTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroNameAccess().getGroup_1()); }
(rule__MacroName__Group_1__0)*
{ after(grammarAccess.getMacroNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MacroName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroName__Group_1__0__Impl
	rule__MacroName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroNameAccess().getAlternatives_1_0()); }
(rule__MacroName__Alternatives_1_0)
{ after(grammarAccess.getMacroNameAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroNameAccess().getTEXTTerminalRuleCall_1_1()); }
	RULE_TEXT
{ after(grammarAccess.getMacroNameAccess().getTEXTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__TablesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getTablesRobotTableParserRuleCall_0()); }
	ruleRobotTable{ after(grammarAccess.getModelAccess().getTablesRobotTableParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SettingsTable__SettingsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingsTableAccess().getSettingsSettingParserRuleCall_2_0()); }
	ruleSetting{ after(grammarAccess.getSettingsTableAccess().getSettingsSettingParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseTable__TestsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseTableAccess().getTestsTestCaseParserRuleCall_2_0()); }
	ruleTestCase{ after(grammarAccess.getTestCaseTableAccess().getTestsTestCaseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordTable__KeywordsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordTableAccess().getKeywordsKeywordParserRuleCall_2_0()); }
	ruleKeyword{ after(grammarAccess.getKeywordTableAccess().getKeywordsKeywordParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariablesTable__VariablesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesTableAccess().getVariablesVariableParserRuleCall_2_0()); }
	ruleVariable{ after(grammarAccess.getVariablesTableAccess().getVariablesVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getNameMacroNameParserRuleCall_0_0()); }
	ruleMacroName{ after(grammarAccess.getTestCaseAccess().getNameMacroNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__SettingsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getSettingsTestCaseSettingParserRuleCall_2_0()); }
	ruleTestCaseSetting{ after(grammarAccess.getTestCaseAccess().getSettingsTestCaseSettingParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__StepsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getStepsIndentedStepParserRuleCall_3_0()); }
	ruleIndentedStep{ after(grammarAccess.getTestCaseAccess().getStepsIndentedStepParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getNameMacroNameParserRuleCall_0_0()); }
	ruleMacroName{ after(grammarAccess.getKeywordAccess().getNameMacroNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__SettingsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getSettingsKeywordSettingParserRuleCall_2_0()); }
	ruleKeywordSetting{ after(grammarAccess.getKeywordAccess().getSettingsKeywordSettingParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyword__StepsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordAccess().getStepsIndentedStepParserRuleCall_3_0()); }
	ruleIndentedStep{ after(grammarAccess.getKeywordAccess().getStepsIndentedStepParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarVariable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarVariableAccess().getNameRobotTextParserRuleCall_1_0()); }
	ruleRobotText{ after(grammarAccess.getScalarVariableAccess().getNameRobotTextParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListVariable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListVariableAccess().getNameRobotTextParserRuleCall_1_0()); }
	ruleRobotText{ after(grammarAccess.getListVariableAccess().getNameRobotTextParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseSetting__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseSettingAccess().getNameTestCaseSettingNameEnumRuleCall_1_0()); }
	ruleTestCaseSettingName{ after(grammarAccess.getTestCaseSettingAccess().getNameTestCaseSettingNameEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCaseSetting__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseSettingAccess().getValueValuesParserRuleCall_3_0()); }
	ruleValues{ after(grammarAccess.getTestCaseSettingAccess().getValueValuesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordSetting__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordSettingAccess().getNameKeywordSettingNameEnumRuleCall_1_0()); }
	ruleKeywordSettingName{ after(grammarAccess.getKeywordSettingAccess().getNameKeywordSettingNameEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordSetting__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordSettingAccess().getValueValuesParserRuleCall_3_0()); }
	ruleValues{ after(grammarAccess.getKeywordSettingAccess().getValueValuesParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneValueSetting__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneValueSettingAccess().getNameRobotOneValueSettingEnumRuleCall_0_0()); }
	ruleRobotOneValueSetting{ after(grammarAccess.getOneValueSettingAccess().getNameRobotOneValueSettingEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneValueSetting__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneValueSettingAccess().getValueRobotTextParserRuleCall_2_0()); }
	ruleRobotText{ after(grammarAccess.getOneValueSettingAccess().getValueRobotTextParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesSetting__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesSettingAccess().getNameRobotValuesSettingEnumRuleCall_0_0()); }
	ruleRobotValuesSetting{ after(grammarAccess.getValuesSettingAccess().getNameRobotValuesSettingEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuesSetting__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuesSettingAccess().getValueValuesParserRuleCall_2_0()); }
	ruleValues{ after(grammarAccess.getValuesSettingAccess().getValueValuesParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StepSetting__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepSettingAccess().getNameRobotStepSettingEnumRuleCall_0_0()); }
	ruleRobotStepSetting{ after(grammarAccess.getStepSettingAccess().getNameRobotStepSettingEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StepSetting__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepSettingAccess().getValueRobotStepParserRuleCall_2_0()); }
	ruleRobotStep{ after(grammarAccess.getStepSettingAccess().getValueRobotStepParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RobotStep__KeywordAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotStepAccess().getKeywordKeywordCrossReference_0_0()); }
(
{ before(grammarAccess.getRobotStepAccess().getKeywordKeywordMacroNameParserRuleCall_0_0_1()); }
	ruleMacroName{ after(grammarAccess.getRobotStepAccess().getKeywordKeywordMacroNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRobotStepAccess().getKeywordKeywordCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_SEPARATOR : ' ' ' '+;

RULE_NL : ('\r'|'\n')+;

RULE_TEXT : ~((' '|'\r'|'\n'|'*'))+;

RULE_COMMENT : ' '* '#' ~(('\r'|'\n'))*;


